{"version":3,"sources":["node_modules/browser-pack/_prelude.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/externals/base64.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/core/EventBus.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/core/FactoryMaker.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/core/events/CoreEvents.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/core/events/Events.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/core/events/EventsBase.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/CommonEncryption.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/Protection.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/ProtectionEvents.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/controllers/ProtectionController.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/controllers/ProtectionKeyController.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/drm/KeySystemClearKey.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/drm/KeySystemPlayReady.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/drm/KeySystemWidevine.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/models/ProtectionModel_01b.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/models/ProtectionModel_21Jan2015.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/models/ProtectionModel_3Feb2014.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/servers/ClearKey.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/servers/DRMToday.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/servers/PlayReady.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/servers/Widevine.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/vo/ClearKeyKeySet.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/vo/KeyError.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/vo/KeyMessage.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/vo/KeyPair.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/vo/KeySystemAccess.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/vo/KeySystemConfiguration.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/vo/MediaCapability.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/protection/vo/NeedKey.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/utils/ErrorHandler.js","C:/Program Files (x86)/dashjs_src/dash.js-development/dash.js/src/streaming/vo/Error.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","dashjs","Protection","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","UTF8","encode","c","charCodeAt","push","decode","v","String","fromCharCode","join","BASE64","T","encodeArray","charAt","R","decodeArray","pop","ASCII","Uint8Array","encodeASCII","decodeASCII","EventBus","on","type","listener","scope","priority","arguments","undefined","EVENT_PRIORITY_LOW","getHandlerIdx","handlers","handler","callback","inserted","some","item","idx","splice","off","trigger","payload","hasOwnProperty","forEach","index","reset","instance","EVENT_PRIORITY_HIGH","__dashjs_factory_name","factory","_FactoryMaker2","getSingletonFactory","FactoryMaker","extend","name","childInstance","override","context","extensionContext","getExtensionContext","getSingletonInstance","className","singletonContexts","obj","setSingletonInstance","getClassFactory","classConstructor","create","merge","apply","getInstance","args","extensionObject","extension","parent","prop","extensions","CoreEvents","_EventsBase","_get","Object","getPrototypeOf","prototype","BUFFERING_COMPLETED","BUFFER_CLEARED","BUFFER_LEVEL_UPDATED","BYTES_APPENDED","CHECK_FOR_EXISTENCE_COMPLETED","CURRENT_TRACK_CHANGED","DATA_UPDATE_COMPLETED","DATA_UPDATE_STARTED","INITIALIZATION_LOADED","INIT_FRAGMENT_LOADED","INIT_REQUESTED","INTERNAL_MANIFEST_LOADED","LIVE_EDGE_SEARCH_COMPLETED","LOADING_COMPLETED","LOADING_PROGRESS","MANIFEST_UPDATED","MEDIA_FRAGMENT_LOADED","QUOTA_EXCEEDED","REPRESENTATION_UPDATED","SEGMENTS_LOADED","SERVICE_LOCATION_BLACKLIST_CHANGED","SOURCEBUFFER_APPEND_COMPLETED","SOURCEBUFFER_REMOVE_COMPLETED","STREAMS_COMPOSED","STREAM_BUFFERING_COMPLETED","STREAM_COMPLETED","STREAM_TEARDOWN_COMPLETE","TIMED_TEXT_REQUESTED","TIME_SYNCHRONIZATION_COMPLETED","URL_RESOLUTION_FAILED","WALLCLOCK_TIME_UPDATED","XLINK_ELEMENT_LOADED","XLINK_READY","Events","_CoreEvents","events","EventsBase","config","publicOnly","evt","indexOf","CommonEncryption","cpArray","retVal","cp","schemeIdUri","toLowerCase","value","pssh","offset","view","DataView","version","getUint8","getUint32","slice","keySystem","initData","psshList","parsePSSHList","uuid","cpData","_externalsBase642","__text","buffer","data","dv","done","byteCursor","size","nextBox","systemID","psshDataSize","boxStart","byteLength","val","toString","createProtectionSystem","controller","protectionKeyController","_controllersProtectionKeyController2","setConfig","log","initialize","protectionModel","getProtectionModel","_controllersProtectionController2","adapter","eventBus","capabilities","setEncryptedMediaSupported","videoElement","videoModel","getElement","onencrypted","mediaKeys","navigator","requestMediaKeySystemAccess","_modelsProtectionModel_21Jan20152","getAPI","APIS_ProtectionModel_3Feb2014","_modelsProtectionModel_3Feb20142","api","APIS_ProtectionModel_01b","_modelsProtectionModel_01b2","apis","keys","generateKeyRequest","addKey","cancelKeyRequest","needkey","keyerror","keyadded","keymessage","setMediaKeys","MediaKeys","release","error","message","ready","close","_coreFactoryMaker2","_ProtectionEvents2","ProtectionEvents","INTERNAL_KEY_MESSAGE","INTERNAL_KEY_SYSTEM_SELECTED","KEY_ADDED","KEY_ERROR","KEY_MESSAGE","KEY_SESSION_CLOSED","KEY_SESSION_CREATED","KEY_SESSION_REMOVED","KEY_STATUSES_CHANGED","KEY_SYSTEM_ACCESS_COMPLETE","KEY_SYSTEM_SELECTED","LICENSE_REQUEST_COMPLETE","NEED_KEY","PROTECTION_CREATED","PROTECTION_DESTROYED","SERVER_CERTIFICATE_UPDATED","TEARDOWN_COMPLETE","VIDEO_ELEMENT_SELECTED","protectionEvents","ProtectionController","setup","keySystems","getKeySystems","pendingNeedKeyData","initialized","sessionType","robustnessLevel","_coreEventsEvents2","_Protection2","manifest","aInfo","vInfo","streamInfo","getStreamsInfo","audioInfo","getMediaInfoForType","videoInfo","mediaInfo","supportedKS","getSupportedKeySystemsFromContentProtection","contentProtection","selectKeySystem","createKeySession","initDataForKS","_CommonEncryption2","getPSSHForKeySystem","currentInitData","getAllInitData","initDataEquals","systemString","loadKeySession","sessionID","removeKeySession","sessionToken","closeKeySession","setServerCertificate","serverCertificate","setMediaElement","element","onNeedKey","onKeyMessage","setSessionType","setRobustnessLevel","level","setProtectionData","protDataSet","getProtData","protData","keySystemString","fromManifest","audioCapabilities","videoCapabilities","_voMediaCapability2","codec","ksIdx","ksConfig","_voKeySystemConfiguration2","requestedKeySystems","ks","configs","onKeySystemAccessComplete","event","requestKeySystemAccess","keySystemAccess","onKeySystemSelected","getKeySystem","sendLicenseRequestCompleteEvent","keyMessage","messageType","licenseServerData","getLicenseServer","eventData","getSessionID","isClearKey","clearkeys","processClearKeyLicenseRequest","updateKeySession","xhr","XMLHttpRequest","url","serverURL","laURL","getLicenseServerURLFromInitData","getPSSHData","getServerURLFromMessage","open","getHTTPMethod","responseType","getResponseType","onload","status","getLicenseMessage","response","statusText","readyState","getErrorResponse","onabort","onerror","updateHeaders","headers","key","withCredentials","setRequestHeader","httpRequestHeaders","getRequestHeadersFromMessage","send","getLicenseRequestFromMessage","initDataType","abInitData","ArrayBuffer","isView","getSupportedKeySystems","ProtectionKeyController","_drmKeySystemPlayReady2","_drmKeySystemWidevine2","_drmKeySystemClearKey2","clearkeyKeySystem","getKeySystemBySystemString","initData1","initData2","data1","data2","j","cps","cpIdx","schemeIdURI","getInitData","shouldNotFilterOutKeySystem","_serversDRMToday2","_serversWidevine2","_serversPlayReady2","_serversClearKey2","getClearKeysFromProtectionData","KeySystemClearKey","protectionData","clearkeySet","jsonMsg","JSON","parse","keyPairs","kids","clearkeyID","clearkey","_voKeyPair2","_voClearKeyKeySet2","parseInitDataFromContentProtection","KeySystemPlayReady","msg","xmlDoc","parser","DOMParser","dataview","messageFormat","Uint16Array","parseFromString","headerNameList","getElementsByTagName","headerValueList","childNodes","nodeValue","Content","licenseRequest","Challenge","numRecords","getUint16","recordType","recordLength","recordData","record","laurl","luiurl","PROSize","PSSHSize","PSSHBoxBuffer","PSSHBox","PSSHData","PSSHBoxType","playreadySystemID","uint8arraydecodedPROHeader","pro","prheader","setUint32","set","setPlayReadyMessageFormat","format","_voError2","KeySystemWidevine","ProtectionModel_01b","pendingSessions","sessions","errHandler","_utilsErrorHandler2","eventHandler","createEventHandler","removeEventListeners","ksConfigurations","ve","document","createElement","found","supportedAudio","supportedVideo","configIdx","videos","videoIdx","canPlayType","contentType","_voKeySystemAccess2","mediaElement","addEventListener","moreSessionsAllowed","newSession","getExpirationTime","NaN","getSessionType","keyID","handleEvent","_voNeedKey2","findSessionByID","sessionId","errorCode","systemCode","_voKeyError2","shift","mediaKeyMessageError","_voKeyMessage2","defaultURL","sessionArray","len","removeEventListener","ProtectionModel_21Jan2015","session","numSessions","removeSession","then","closed","closeKeySessionInternal","requestKeySystemAccessInternal","mksa","createMediaKeys","mkeys","createSession","createSessionToken","generateRequest","toJWK","update","load","success","remove","mediaKeySystemAccess","configuration","getConfiguration","token","expiration","getKeyStatuses","keyStatuses","ProtectionModel_3Feb2014","audios","audioIdx","isTypeSupported","ksAccess","ksConfiguration","boundDoSetKeys","doSetKeys","bind","keySession","errorStr","destinationURL","ClearKey","substring","serverResponse","keypair","keyid","kid","replace","k","DRMToday","keySystemStr","com.widevine.alpha","license","com.microsoft.playready","PlayReady","Widevine","ClearKeyKeySet","numKeys","jwk","kty","alg","jwkString","stringify","buf","bView","KeyError","errorString","KeyMessage","KeyPair","KeySystemAccess","KeySystemConfiguration","distinctiveIdentifier","persistentState","sessionTypes","initDataTypes","MediaCapability","robustness","NeedKey","ErrorHandler","capabilityError","err","ERROR","downloadError","id","request","manifestError","timedTextError","ccContent","cc","mediaSourceError","mediaKeySessionError","_coreEventBus2","CAPABILITY_ERROR_MEDIASOURCE","CAPABILITY_ERROR_MEDIAKEYS","DOWNLOAD_ERROR_ID_MANIFEST","DOWNLOAD_ERROR_ID_SIDX","DOWNLOAD_ERROR_ID_CONTENT","DOWNLOAD_ERROR_ID_INITIALIZATION","DOWNLOAD_ERROR_ID_XLINK","MANIFEST_ERROR_ID_CODEC","MANIFEST_ERROR_ID_PARSE","MANIFEST_ERROR_ID_NOSTREAMS","TIMED_TEXT_ERROR_ID_PARSE"],"mappings":"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","file":"dash.protection.min.js","sourceRoot":"./src/","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/* $Date: 2007-06-12 18:02:31 $ */\r\n\r\n// from: http://bannister.us/weblog/2007/06/09/simple-base64-encodedecode-javascript/\r\n// Handles encode/decode of ASCII and Unicode strings.\r\n\r\nvar UTF8 = {};\r\nUTF8.encode = function(s) {\r\n    var u = [];\r\n    for (var i = 0; i < s.length; ++i) {\r\n        var c = s.charCodeAt(i);\r\n        if (c < 0x80) {\r\n            u.push(c);\r\n        } else if (c < 0x800) {\r\n            u.push(0xC0 | (c >> 6));\r\n            u.push(0x80 | (63 & c));\r\n        } else if (c < 0x10000) {\r\n            u.push(0xE0 | (c >> 12));\r\n            u.push(0x80 | (63 & (c >> 6)));\r\n            u.push(0x80 | (63 & c));\r\n        } else {\r\n            u.push(0xF0 | (c >> 18));\r\n            u.push(0x80 | (63 & (c >> 12)));\r\n            u.push(0x80 | (63 & (c >> 6)));\r\n            u.push(0x80 | (63 & c));\r\n        }\r\n    }\r\n    return u;\r\n};\r\nUTF8.decode = function(u) {\r\n    var a = [];\r\n    var i = 0;\r\n    while (i < u.length) {\r\n        var v = u[i++];\r\n        if (v < 0x80) {\r\n            // no need to mask byte\r\n        } else if (v < 0xE0) {\r\n            v = (31 & v) << 6;\r\n            v |= (63 & u[i++]);\r\n        } else if (v < 0xF0) {\r\n            v = (15 & v) << 12;\r\n            v |= (63 & u[i++]) << 6;\r\n            v |= (63 & u[i++]);\r\n        } else {\r\n            v = (7 & v) << 18;\r\n            v |= (63 & u[i++]) << 12;\r\n            v |= (63 & u[i++]) << 6;\r\n            v |= (63 & u[i++]);\r\n        }\r\n        a.push(String.fromCharCode(v));\r\n    }\r\n    return a.join('');\r\n};\r\n\r\nvar BASE64 = {};\r\n(function(T){\r\n    var encodeArray = function(u) {\r\n        var i = 0;\r\n        var a = [];\r\n        var n = 0 | (u.length / 3);\r\n        while (0 < n--) {\r\n            var v = (u[i] << 16) + (u[i+1] << 8) + u[i+2];\r\n            i += 3;\r\n            a.push(T.charAt(63 & (v >> 18)));\r\n            a.push(T.charAt(63 & (v >> 12)));\r\n            a.push(T.charAt(63 & (v >> 6)));\r\n            a.push(T.charAt(63 & v));\r\n        }\r\n        if (2 == (u.length - i)) {\r\n            var v = (u[i] << 16) + (u[i+1] << 8);\r\n            a.push(T.charAt(63 & (v >> 18)));\r\n            a.push(T.charAt(63 & (v >> 12)));\r\n            a.push(T.charAt(63 & (v >> 6)));\r\n            a.push('=');\r\n        } else if (1 == (u.length - i)) {\r\n            var v = (u[i] << 16);\r\n            a.push(T.charAt(63 & (v >> 18)));\r\n            a.push(T.charAt(63 & (v >> 12)));\r\n            a.push('==');\r\n        }\r\n        return a.join('');\r\n    }\r\n    var R = (function(){\r\n        var a = [];\r\n        for (var i=0; i<T.length; ++i) {\r\n            a[T.charCodeAt(i)] = i;\r\n        }\r\n        a['='.charCodeAt(0)] = 0;\r\n        return a;\r\n    })();\r\n    var decodeArray = function(s) {\r\n        var i = 0;\r\n        var u = [];\r\n        var n = 0 | (s.length / 4);\r\n        while (0 < n--) {\r\n            var v = (R[s.charCodeAt(i)] << 18) + (R[s.charCodeAt(i+1)] << 12) + (R[s.charCodeAt(i+2)] << 6) + R[s.charCodeAt(i+3)];\r\n            u.push(255 & (v >> 16));\r\n            u.push(255 & (v >> 8));\r\n            u.push(255 & v);\r\n            i += 4;\r\n        }\r\n        if (u) {\r\n            if ('=' == s.charAt(i-2)) {\r\n                u.pop();\r\n                u.pop();\r\n            } else if ('=' == s.charAt(i-1)) {\r\n                u.pop();\r\n            }\r\n        }\r\n        return u;\r\n    }\r\n    var ASCII = {};\r\n    ASCII.encode = function(s) {\r\n        var u = [];\r\n        for (var i = 0; i<s.length; ++i) {\r\n            u.push(s.charCodeAt(i));\r\n        }\r\n        return u;\r\n    };\r\n    ASCII.decode = function(u) {\r\n        for (var i = 0; i<s.length; ++i) {\r\n            a[i] = String.fromCharCode(a[i]);\r\n        }\r\n        return a.join('');\r\n    };\r\n    BASE64.decodeArray = function(s) {\r\n        var u = decodeArray(s);\r\n        return new Uint8Array(u);\r\n    };\r\n    BASE64.encodeASCII = function(s) {\r\n        var u = ASCII.encode(s);\r\n        return encodeArray(u);\r\n    };\r\n    BASE64.decodeASCII = function(s) {\r\n        var a = decodeArray(s);\r\n        return ASCII.decode(a);\r\n    };\r\n    BASE64.encode = function(s) {\r\n        var u = UTF8.encode(s);\r\n        return encodeArray(u);\r\n    };\r\n    BASE64.decode = function(s) {\r\n        var u = decodeArray(s);\r\n        return UTF8.decode(u);\r\n    };\r\n})(\"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\");\r\n\r\n/*The following polyfills are not used in dash.js but have caused multiplayer integration issues.\r\n Therefore commenting them out.\r\nif (undefined === btoa) {\r\n    var btoa = BASE64.encode;\r\n}\r\nif (undefined === atob) {\r\n    var atob = BASE64.decode;\r\n}\r\n*/\r\n\r\nif (typeof exports !== 'undefined') {\r\n    exports.decode = BASE64.decode;\r\n    exports.decodeArray = BASE64.decodeArray;\r\n}\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from './FactoryMaker';\r\n\r\nconst EVENT_PRIORITY_LOW = 0;\r\nconst EVENT_PRIORITY_HIGH = 5000;\r\n\r\nfunction EventBus() {\r\n\r\n    let handlers = {};\r\n\r\n    function on(type, listener, scope, priority = EVENT_PRIORITY_LOW) {\r\n\r\n        if (!type) {\r\n            throw new Error('event type cannot be null or undefined');\r\n        }\r\n        if (!listener || typeof (listener) !== 'function') {\r\n            throw new Error('listener must be a function: ' + listener);\r\n        }\r\n\r\n        if (getHandlerIdx(type, listener, scope) >= 0) return;\r\n\r\n        handlers[type] = handlers[type] || [];\r\n\r\n        const handler = {\r\n            callback: listener,\r\n            scope: scope,\r\n            priority: priority\r\n        };\r\n\r\n        const inserted = handlers[type].some((item , idx) => {\r\n            if (priority > item.priority ) {\r\n                handlers[type].splice(idx, 0, handler);\r\n                return true;\r\n            }\r\n        });\r\n\r\n        if (!inserted) {\r\n            handlers[type].push(handler);\r\n        }\r\n    }\r\n\r\n    function off(type, listener, scope) {\r\n        if (!type || !listener || !handlers[type]) return;\r\n        const idx = getHandlerIdx(type, listener, scope);\r\n        if (idx < 0) return;\r\n        handlers[type].splice(idx, 1);\r\n    }\r\n\r\n    function trigger(type, payload) {\r\n        if (!type || !handlers[type]) return;\r\n\r\n        payload = payload || {};\r\n\r\n        if (payload.hasOwnProperty('type')) throw new Error('\\'type\\' is a reserved word for event dispatching');\r\n\r\n        payload.type = type;\r\n\r\n        handlers[type].forEach( handler => handler.callback.call(handler.scope, payload) );\r\n    }\r\n\r\n    function getHandlerIdx(type, listener, scope) {\r\n\r\n        let idx = -1;\r\n\r\n        if (!handlers[type]) return idx;\r\n\r\n        handlers[type].some( (item, index) => {\r\n            if (item.callback === listener && (!scope || scope === item.scope)) {\r\n                idx = index;\r\n                return true;\r\n            }\r\n        });\r\n        return idx;\r\n    }\r\n\r\n    function reset() {\r\n        handlers = {};\r\n    }\r\n\r\n    const instance = {\r\n        on: on,\r\n        off: off,\r\n        trigger: trigger,\r\n        reset: reset\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nEventBus.__dashjs_factory_name = 'EventBus';\r\nconst factory = FactoryMaker.getSingletonFactory(EventBus);\r\nfactory.EVENT_PRIORITY_LOW = EVENT_PRIORITY_LOW;\r\nfactory.EVENT_PRIORITY_HIGH = EVENT_PRIORITY_HIGH;\r\nexport default factory;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @module FactoryMaker\r\n */\r\nlet FactoryMaker = (function () {\r\n\r\n    let instance;\r\n    let extensions = [];\r\n    let singletonContexts = [];\r\n\r\n    function extend(name, childInstance, override, context) {\r\n        let extensionContext = getExtensionContext(context);\r\n        if (!extensionContext[name] && childInstance) {\r\n            extensionContext[name] = {instance: childInstance, override: override};\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Use this method from your extended object.  this.factory is injected into your object.\r\n     * this.factory.getSingletonInstance(this.context, 'VideoModel')\r\n     * will return the video model for use in the extended object.\r\n     *\r\n     * @param {Object} context - injected into extended object as this.context\r\n     * @param {string} className - string name found in all dash.js objects\r\n     * with name __dashjs_factory_name Will be at the bottom. Will be the same as the object's name.\r\n     * @returns {*} Context aware instance of specified singleton name.\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function getSingletonInstance(context, className) {\r\n        for (let i in singletonContexts) {\r\n            let obj = singletonContexts[i];\r\n            if (obj.context === context && obj.name === className) {\r\n                return obj.instance;\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Use this method to add an singleton instance to the system.  Useful for unit testing to mock objects etc.\r\n     *\r\n     * @param {Object} context\r\n     * @param {string} className\r\n     * @param {Object} instance\r\n     * @memberof module:FactoryMaker\r\n     * @instance\r\n     */\r\n    function setSingletonInstance(context, className, instance) {\r\n        for (let i in singletonContexts) {\r\n            let obj = singletonContexts[i];\r\n            if (obj.context === context && obj.name === className) {\r\n                singletonContexts[i].instance = instance;\r\n                return;\r\n            }\r\n        }\r\n        singletonContexts.push({ name: className, context: context, instance: instance });\r\n    }\r\n\r\n    function getClassFactory(classConstructor) {\r\n        return function (context) {\r\n            if (context === undefined) {\r\n                context = {};\r\n            }\r\n            return {\r\n                create: function () {\r\n                    return merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\r\n                }\r\n            };\r\n        };\r\n    }\r\n\r\n    function getSingletonFactory(classConstructor) {\r\n        return function (context) {\r\n            let instance;\r\n            if (context === undefined) {\r\n                context = {};\r\n            }\r\n            return {\r\n                getInstance: function () {\r\n                    // If we don't have an instance yet check for one on the context\r\n                    if (!instance) {\r\n                        instance = getSingletonInstance(context, classConstructor.__dashjs_factory_name);\r\n                    }\r\n                    // If there's no instance on the context then create one\r\n                    if (!instance) {\r\n                        instance = merge(classConstructor.__dashjs_factory_name, classConstructor.apply({ context: context }, arguments), context, arguments);\r\n                        singletonContexts.push({ name: classConstructor.__dashjs_factory_name, context: context, instance: instance });\r\n                    }\r\n                    return instance;\r\n                }\r\n            };\r\n        };\r\n    }\r\n\r\n    function merge(name, classConstructor, context, args) {\r\n        let extensionContext = getExtensionContext(context);\r\n        let extensionObject = extensionContext[name];\r\n        if (extensionObject) {\r\n            let extension = extensionObject.instance;\r\n            if (extensionObject.override) { //Override public methods in parent but keep parent.\r\n                extension = extension.apply({ context: context, factory: instance, parent: classConstructor}, args);\r\n                for (const prop in extension) {\r\n                    if (classConstructor.hasOwnProperty(prop)) {\r\n                        classConstructor[prop] = extension[prop];\r\n                    }\r\n                }\r\n            } else { //replace parent object completely with new object. Same as dijon.\r\n                return extension.apply({ context: context, factory: instance}, args);\r\n            }\r\n        }\r\n        return classConstructor;\r\n    }\r\n\r\n    function getExtensionContext(context) {\r\n        let extensionContext;\r\n        extensions.forEach(function (obj) {\r\n            if (obj === context) {\r\n                extensionContext = obj;\r\n            }\r\n        });\r\n        if (!extensionContext) {\r\n            extensionContext = extensions.push(context);\r\n        }\r\n        return extensionContext;\r\n    }\r\n\r\n    instance = {\r\n        extend: extend,\r\n        getSingletonInstance: getSingletonInstance,\r\n        setSingletonInstance: setSingletonInstance,\r\n        getSingletonFactory: getSingletonFactory,\r\n        getClassFactory: getClassFactory\r\n    };\r\n\r\n    return instance;\r\n\r\n}());\r\n\r\nexport default FactoryMaker;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from './EventsBase';\r\n\r\n/**\r\n * These are internal events that should not be needed at the player level.\r\n * If you find and event in here that you would like access to from MediaPlayer level\r\n * please add an issue at https://github.com/Dash-Industry-Forum/dash.js/issues/new\r\n * @class\r\n * @ignore\r\n */\r\nclass CoreEvents extends EventsBase {\r\n    constructor () {\r\n        super();\r\n        this.BUFFERING_COMPLETED = 'bufferingCompleted';\r\n        this.BUFFER_CLEARED = 'bufferCleared';\r\n        this.BUFFER_LEVEL_UPDATED = 'bufferLevelUpdated';\r\n        this.BYTES_APPENDED = 'bytesAppended';\r\n        this.CHECK_FOR_EXISTENCE_COMPLETED = 'checkForExistenceCompleted';\r\n        this.CURRENT_TRACK_CHANGED = 'currentTrackChanged';\r\n        this.DATA_UPDATE_COMPLETED = 'dataUpdateCompleted';\r\n        this.DATA_UPDATE_STARTED = 'dataUpdateStarted';\r\n        this.INITIALIZATION_LOADED = 'initializationLoaded';\r\n        this.INIT_FRAGMENT_LOADED = 'initFragmentLoaded';\r\n        this.INIT_REQUESTED = 'initRequested';\r\n        this.INTERNAL_MANIFEST_LOADED = 'internalManifestLoaded';\r\n        this.LIVE_EDGE_SEARCH_COMPLETED = 'liveEdgeSearchCompleted';\r\n        this.LOADING_COMPLETED = 'loadingCompleted';\r\n        this.LOADING_PROGRESS = 'loadingProgress';\r\n        this.MANIFEST_UPDATED = 'manifestUpdated';\r\n        this.MEDIA_FRAGMENT_LOADED = 'mediaFragmentLoaded';\r\n        this.QUOTA_EXCEEDED = 'quotaExceeded';\r\n        this.REPRESENTATION_UPDATED = 'representationUpdated';\r\n        this.SEGMENTS_LOADED = 'segmentsLoaded';\r\n        this.SERVICE_LOCATION_BLACKLIST_CHANGED = 'serviceLocationBlacklistChanged';\r\n        this.SOURCEBUFFER_APPEND_COMPLETED = 'sourceBufferAppendCompleted';\r\n        this.SOURCEBUFFER_REMOVE_COMPLETED = 'sourceBufferRemoveCompleted';\r\n        this.STREAMS_COMPOSED = 'streamsComposed';\r\n        this.STREAM_BUFFERING_COMPLETED = 'streamBufferingCompleted';\r\n        this.STREAM_COMPLETED = 'streamCompleted';\r\n        this.STREAM_TEARDOWN_COMPLETE = 'streamTeardownComplete';\r\n        this.TIMED_TEXT_REQUESTED = 'timedTextRequested';\r\n        this.TIME_SYNCHRONIZATION_COMPLETED = 'timeSynchronizationComplete';\r\n        this.URL_RESOLUTION_FAILED = 'urlResolutionFailed';\r\n        this.WALLCLOCK_TIME_UPDATED = 'wallclockTimeUpdated';\r\n        this.XLINK_ELEMENT_LOADED = 'xlinkElementLoaded';\r\n        this.XLINK_READY = 'xlinkReady';\r\n    }\r\n}\r\n\r\nexport default CoreEvents;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nimport CoreEvents from './CoreEvents';\r\nclass Events extends CoreEvents {\r\n}\r\nlet events = new Events();\r\nexport default events;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass EventsBase {\r\n    extend (events, config) {\r\n        if (!events) return;\r\n\r\n        let override = config ? config.override : false;\r\n        let publicOnly = config ? config.publicOnly : false;\r\n\r\n\r\n        for (const evt in events) {\r\n            if (!events.hasOwnProperty(evt) || (this[evt] && !override)) continue;\r\n            if (publicOnly && events[evt].indexOf('public_') === -1) continue;\r\n            this[evt] = events[evt];\r\n\r\n        }\r\n    }\r\n}\r\n\r\nexport default EventsBase;","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport BASE64 from '../../../externals/base64';\r\n\r\nclass CommonEncryption {\r\n    /**\r\n     * Find and return the ContentProtection element in the given array\r\n     * that indicates support for MPEG Common Encryption\r\n     *\r\n     * @param {Array} cpArray array of content protection elements\r\n     * @returns {Object|null} the Common Encryption content protection element or\r\n     * null if one was not found\r\n     */\r\n    static findCencContentProtection(cpArray) {\r\n        var retVal = null;\r\n        for (var i = 0; i < cpArray.length; ++i) {\r\n            var cp = cpArray[i];\r\n            if (cp.schemeIdUri.toLowerCase() === 'urn:mpeg:dash:mp4protection:2011' &&\r\n                    cp.value.toLowerCase() === 'cenc')\r\n                retVal = cp;\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    /**\r\n     * Returns just the data portion of a single PSSH\r\n     *\r\n     * @param {ArrayBuffer} pssh - the PSSH\r\n     * @return {ArrayBuffer} data portion of the PSSH\r\n     */\r\n    static getPSSHData(pssh) {\r\n        var offset = 8; // Box size and type fields\r\n        var view = new DataView(pssh);\r\n\r\n        // Read version\r\n        var version = view.getUint8(offset);\r\n\r\n        offset += 20; // Version (1), flags (3), system ID (16)\r\n\r\n        if (version > 0) {\r\n            offset += 4 + (16 * view.getUint32(offset)); // Key ID count (4) and All key IDs (16*count)\r\n        }\r\n\r\n        offset += 4; // Data size\r\n        return pssh.slice(offset);\r\n    }\r\n\r\n    /**\r\n     * Returns the PSSH associated with the given key system from the concatenated\r\n     * list of PSSH boxes in the given initData\r\n     *\r\n     * @param {KeySystem} keySystem the desired\r\n     * key system\r\n     * @param {ArrayBuffer} initData 'cenc' initialization data.  Concatenated list of PSSH.\r\n     * @returns {ArrayBuffer|null} The PSSH box data corresponding to the given key system, null if not found\r\n     * or null if a valid association could not be found.\r\n     */\r\n    static getPSSHForKeySystem(keySystem, initData) {\r\n        var psshList = CommonEncryption.parsePSSHList(initData);\r\n        if (psshList.hasOwnProperty(keySystem.uuid.toLowerCase())) {\r\n            return psshList[keySystem.uuid.toLowerCase()];\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Parse a standard common encryption PSSH which contains a simple\r\n     * base64-encoding of the init data\r\n     *\r\n     * @param {Object} cpData the ContentProtection element\r\n     * @returns {ArrayBuffer|null} the init data or null if not found\r\n     */\r\n    static parseInitDataFromContentProtection(cpData) {\r\n        if ('pssh' in cpData) {\r\n            return BASE64.decodeArray(cpData.pssh.__text).buffer;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Parses list of PSSH boxes into keysystem-specific PSSH data\r\n     *\r\n     * @param {ArrayBuffer} data - the concatenated list of PSSH boxes as provided by\r\n     * CDM as initialization data when CommonEncryption content is detected\r\n     * @returns {Object|Array} an object that has a property named according to each of\r\n     * the detected key system UUIDs (e.g. 00000000-0000-0000-0000-0000000000)\r\n     * and a ArrayBuffer (the entire PSSH box) as the property value\r\n     */\r\n    static parsePSSHList(data) {\r\n\r\n        if (data === null)\r\n            return [];\r\n\r\n        var dv = new DataView(data);\r\n        var done = false;\r\n        var pssh = {};\r\n\r\n        // TODO: Need to check every data read for end of buffer\r\n        var byteCursor = 0;\r\n        while (!done) {\r\n\r\n            var size,\r\n                nextBox,\r\n                version,\r\n                systemID,\r\n                psshDataSize;\r\n            var boxStart = byteCursor;\r\n\r\n            if (byteCursor >= dv.buffer.byteLength)\r\n                break;\r\n\r\n            /* Box size */\r\n            size = dv.getUint32(byteCursor);\r\n            nextBox = byteCursor + size;\r\n            byteCursor += 4;\r\n\r\n            /* Verify PSSH */\r\n            if (dv.getUint32(byteCursor) !== 0x70737368) {\r\n                byteCursor = nextBox;\r\n                continue;\r\n            }\r\n            byteCursor += 4;\r\n\r\n            /* Version must be 0 or 1 */\r\n            version = dv.getUint8(byteCursor);\r\n            if (version !== 0 && version !== 1) {\r\n                byteCursor = nextBox;\r\n                continue;\r\n            }\r\n            byteCursor++;\r\n\r\n            byteCursor += 3; /* skip flags */\r\n\r\n            // 16-byte UUID/SystemID\r\n            systemID = '';\r\n            var i, val;\r\n            for (i = 0; i < 4; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 4;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 2; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 2;\r\n            systemID += '-';\r\n            for (i = 0; i < 6; i++) {\r\n                val = dv.getUint8(byteCursor + i).toString(16);\r\n                systemID += (val.length === 1) ? '0' + val : val;\r\n            }\r\n            byteCursor += 6;\r\n\r\n            systemID = systemID.toLowerCase();\r\n\r\n            /* PSSH Data Size */\r\n            psshDataSize = dv.getUint32(byteCursor);\r\n            byteCursor += 4;\r\n\r\n            /* PSSH Data */\r\n            pssh[systemID] = dv.buffer.slice(boxStart, nextBox);\r\n            byteCursor = nextBox;\r\n        }\r\n\r\n        return pssh;\r\n    }\r\n}\r\n\r\nexport default CommonEncryption;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport ProtectionController from './controllers/ProtectionController';\r\nimport ProtectionKeyController from './controllers/ProtectionKeyController';\r\nimport ProtectionEvents from './ProtectionEvents';\r\nimport ProtectionModel_21Jan2015 from './models/ProtectionModel_21Jan2015';\r\nimport ProtectionModel_3Feb2014 from './models/ProtectionModel_3Feb2014';\r\nimport ProtectionModel_01b from './models/ProtectionModel_01b';\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\n\r\nconst APIS_ProtectionModel_01b = [\r\n    // Un-prefixed as per spec\r\n    {\r\n        // Video Element\r\n        generateKeyRequest: 'generateKeyRequest',\r\n        addKey: 'addKey',\r\n        cancelKeyRequest: 'cancelKeyRequest',\r\n\r\n        // Events\r\n        needkey: 'needkey',\r\n        keyerror: 'keyerror',\r\n        keyadded: 'keyadded',\r\n        keymessage: 'keymessage'\r\n    },\r\n    // Webkit-prefixed (early Chrome versions and Chrome with EME disabled in chrome://flags)\r\n    {\r\n        // Video Element\r\n        generateKeyRequest: 'webkitGenerateKeyRequest',\r\n        addKey: 'webkitAddKey',\r\n        cancelKeyRequest: 'webkitCancelKeyRequest',\r\n\r\n        // Events\r\n        needkey: 'webkitneedkey',\r\n        keyerror: 'webkitkeyerror',\r\n        keyadded: 'webkitkeyadded',\r\n        keymessage: 'webkitkeymessage'\r\n    }\r\n];\r\n\r\nconst APIS_ProtectionModel_3Feb2014 = [\r\n    // Un-prefixed as per spec\r\n    // Chrome 38-39 (and some earlier versions) with chrome://flags -- Enable Encrypted Media Extensions\r\n    {\r\n        // Video Element\r\n        setMediaKeys: 'setMediaKeys',\r\n        // MediaKeys\r\n        MediaKeys: 'MediaKeys',\r\n        // MediaKeySession\r\n        release: 'close',\r\n\r\n        // Events\r\n        needkey: 'needkey',\r\n        error: 'keyerror',\r\n        message: 'keymessage',\r\n        ready: 'keyadded',\r\n        close: 'keyclose'\r\n    },\r\n    // MS-prefixed (IE11, Windows 8.1)\r\n    {\r\n        // Video Element\r\n        setMediaKeys: 'msSetMediaKeys',\r\n        // MediaKeys\r\n        MediaKeys: 'MSMediaKeys',\r\n        // MediaKeySession\r\n        release: 'close',\r\n        // Events\r\n        needkey: 'msneedkey',\r\n        error: 'mskeyerror',\r\n        message: 'mskeymessage',\r\n        ready: 'mskeyadded',\r\n        close: 'mskeyclose'\r\n    }\r\n];\r\n\r\nfunction Protection() {\r\n\r\n    let instance;\r\n    let context = this.context;\r\n\r\n    /**\r\n     * Create a ProtectionController and associated ProtectionModel for use with\r\n     * a single piece of content.\r\n     *\r\n     * @param {Object} config\r\n     * @return {ProtectionController} protection controller\r\n     *\r\n     */\r\n    function createProtectionSystem(config) {\r\n\r\n        let controller = null;\r\n\r\n        let protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        protectionKeyController.setConfig({log: config.log,});\r\n        protectionKeyController.initialize();\r\n\r\n        let protectionModel =  getProtectionModel(config);\r\n\r\n        if (!controller && protectionModel) {//TODO add ability to set external controller if still needed at all?\r\n            controller = ProtectionController(context).create({\r\n                protectionModel: protectionModel,\r\n                protectionKeyController: protectionKeyController,\r\n                adapter: config.adapter,\r\n                eventBus: config.eventBus,\r\n                log: config.log\r\n            });\r\n            config.capabilities.setEncryptedMediaSupported(true);\r\n        }\r\n        return controller;\r\n    }\r\n\r\n    function getProtectionModel(config) {\r\n\r\n        let log = config.log;\r\n        let eventBus = config.eventBus;\r\n        let videoElement = config.videoModel.getElement();\r\n\r\n        if (videoElement.onencrypted !== undefined &&\r\n            videoElement.mediaKeys !== undefined &&\r\n            navigator.requestMediaKeySystemAccess !== undefined &&\r\n            typeof navigator.requestMediaKeySystemAccess === 'function') {\r\n\r\n            log('EME detected on this user agent! (ProtectionModel_21Jan2015)');\r\n            return ProtectionModel_21Jan2015(context).create({log: log, eventBus: eventBus});\r\n\r\n        } else if (getAPI(videoElement, APIS_ProtectionModel_3Feb2014)) {\r\n\r\n            log('EME detected on this user agent! (ProtectionModel_3Feb2014)');\r\n            return ProtectionModel_3Feb2014(context).create({log: log, eventBus: eventBus, api: getAPI(videoElement, APIS_ProtectionModel_3Feb2014)});\r\n\r\n        } else if (getAPI(videoElement, APIS_ProtectionModel_01b)) {\r\n\r\n            log('EME detected on this user agent! (ProtectionModel_01b)');\r\n            return ProtectionModel_01b(context).create({log: log, eventBus: eventBus, api: getAPI(videoElement, APIS_ProtectionModel_01b)});\r\n\r\n        } else {\r\n\r\n            log('No supported version of EME detected on this user agent! - Attempts to play encrypted content will fail!');\r\n            return null;\r\n\r\n        }\r\n    }\r\n\r\n    function getAPI(videoElement, apis) {\r\n\r\n        for (var i = 0; i < apis.length; i++) {\r\n            var api = apis[i];\r\n            // detect if api is supported by browser\r\n            // check only first function in api -> should be fine\r\n            if (typeof videoElement[api[Object.keys(api)[0]]] !== 'function') {\r\n                continue;\r\n            }\r\n\r\n            return api;\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        createProtectionSystem: createProtectionSystem\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nProtection.__dashjs_factory_name = 'Protection';\r\nlet factory = FactoryMaker.getClassFactory(Protection);\r\nfactory.events = ProtectionEvents;\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventsBase from '../../core/events/EventsBase';\r\n/**\r\n * @class\r\n *\r\n */\r\nclass ProtectionEvents extends EventsBase {\r\n    /**\r\n     * @description Public facing external events to be used when including protection package.\r\n     * All public events will be aggregated into the MediaPlayerEvents Class and can be accessed\r\n     * via MediaPlayer.events.  public_ is the prefix that we use to move event names to MediaPlayerEvents.\r\n     */\r\n    constructor () {\r\n        super();\r\n\r\n        /**\r\n         * Event ID for events delivered when the protection set receives\r\n         * a key message from the CDM\r\n         *\r\n         * @ignore\r\n         */\r\n        this.INTERNAL_KEY_MESSAGE = 'internalKeyMessage';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key system selection procedure\r\n         * completes\r\n         * @ignore\r\n         */\r\n        this.INTERNAL_KEY_SYSTEM_SELECTED = 'internalKeySystemSelected';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new key has been added\r\n         *\r\n         * @constant\r\n         * @deprecated The latest versions of the EME specification no longer\r\n         * use this event.  {@MediaPlayer.models.protectionModel.eventList.KEY_STATUSES_CHANGED}\r\n         * is preferred.\r\n         * @event ProtectionEvents#KEY_ADDED\r\n         */\r\n        this.KEY_ADDED = 'public_keyAdded';\r\n        /**\r\n         * Event ID for events delivered when an error is encountered by the CDM\r\n         * while processing a license server response message\r\n         * @event ProtectionEvents#KEY_ERROR\r\n         */\r\n        this.KEY_ERROR = 'public_keyError';\r\n\r\n        /**\r\n         * Event ID for events delivered when the protection set receives\r\n         * a key message from the CDM\r\n         * @event ProtectionEvents#KEY_MESSAGE\r\n         */\r\n        this.KEY_MESSAGE = 'public_keyMessage';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key session close\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_CLOSED\r\n         */\r\n        this.KEY_SESSION_CLOSED = 'public_keySessionClosed';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new key sessions creation\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_CREATED\r\n         */\r\n        this.KEY_SESSION_CREATED = 'public_keySessionCreated';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key session removal\r\n         * process has completed\r\n         * @event ProtectionEvents#KEY_SESSION_REMOVED\r\n         */\r\n        this.KEY_SESSION_REMOVED = 'public_keySessionRemoved';\r\n\r\n\r\n        /**\r\n         * Event ID for events delivered when the status of one or more\r\n         * decryption keys has changed\r\n         * @event ProtectionEvents#KEY_STATUSES_CHANGED\r\n         */\r\n        this.KEY_STATUSES_CHANGED = 'public_keyStatusesChanged';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key system access procedure\r\n         * has completed\r\n         * @ignore\r\n         */\r\n        this.KEY_SYSTEM_ACCESS_COMPLETE = 'keySystemAccessComplete';\r\n\r\n        /**\r\n         * Event ID for events delivered when a key system selection procedure\r\n         * completes\r\n         * @event ProtectionEvents#KEY_SYSTEM_SELECTED\r\n         */\r\n        this.KEY_SYSTEM_SELECTED = 'public_keySystemSelected';\r\n\r\n        /**\r\n         * Event ID for events delivered when a license request procedure\r\n         * has completed\r\n         * @event ProtectionEvents#LICENSE_REQUEST_COMPLETE\r\n         */\r\n        this.LICENSE_REQUEST_COMPLETE = 'public_licenseRequestComplete';\r\n\r\n        /**\r\n         * Event ID for needkey/encrypted events\r\n         * @ignore\r\n         */\r\n        this.NEED_KEY = 'needkey';\r\n\r\n        /**\r\n         * Event ID for events delivered when the Protection system is detected and created.\r\n         * @event ProtectionEvents#PROTECTION_CREATED\r\n         */\r\n        this.PROTECTION_CREATED = 'public_protectioncreated';\r\n\r\n        /**\r\n         * Event ID for events delivered when the Protection system is destroyed.\r\n         * @event ProtectionEvents#PROTECTION_DESTROYED\r\n         */\r\n        this.PROTECTION_DESTROYED = 'public_protectiondestroyed';\r\n\r\n        /**\r\n         * Event ID for events delivered when a new server certificate has\r\n         * been delivered to the CDM\r\n         * @ignore\r\n         */\r\n        this.SERVER_CERTIFICATE_UPDATED = 'serverCertificateUpdated';\r\n\r\n        /**\r\n         * Event ID for events delivered when the process of shutting down\r\n         * a protection set has completed\r\n         * @ignore\r\n         */\r\n        this.TEARDOWN_COMPLETE =  'protectionTeardownComplete';\r\n\r\n        /**\r\n         * Event ID for events delivered when a HTMLMediaElement has been\r\n         * associated with the protection set\r\n         * @ignore\r\n         */\r\n        this.VIDEO_ELEMENT_SELECTED = 'videoElementSelected';\r\n    }\r\n}\r\n\r\nlet protectionEvents = new ProtectionEvents();\r\nexport default protectionEvents;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport Events from '../../../core/events/Events';\r\nimport MediaCapability from '../vo/MediaCapability';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\nimport Protection from '../Protection';\r\n\r\n/**\r\n * @module ProtectionController\r\n * @description Provides access to media protection information and functionality.  Each\r\n * ProtectionController manages a single {@link MediaPlayer.models.ProtectionModel}\r\n * which encapsulates a set of protection information (EME APIs, selected key system,\r\n * key sessions).  The APIs of ProtectionController mostly align with the latest EME\r\n * APIs.  Key system selection is mostly automated when combined with app-overrideable\r\n * functionality provided in {@link ProtectionKeyController}.\r\n * @todo ProtectionController does almost all of its tasks automatically after init() is\r\n * called.  Applications might want more control over this process and want to go through\r\n * each step manually (key system selection, session creation, session maintenance).\r\n * @param {Object} config\r\n */\r\n\r\nfunction ProtectionController(config) {\r\n\r\n    let protectionKeyController = config.protectionKeyController;\r\n    let protectionModel = config.protectionModel;\r\n    let adapter = config.adapter;\r\n    let eventBus = config.eventBus;\r\n    let log = config.log;\r\n\r\n    let instance,\r\n        keySystems,\r\n        pendingNeedKeyData,\r\n        audioInfo,\r\n        videoInfo,\r\n        protDataSet,\r\n        initialized,\r\n        sessionType,\r\n        robustnessLevel,\r\n        keySystem;\r\n\r\n    function setup() {\r\n        keySystems = protectionKeyController.getKeySystems();\r\n        pendingNeedKeyData = [];\r\n        initialized = false;\r\n        sessionType = 'temporary';\r\n        robustnessLevel = '';\r\n\r\n        Events.extend(Protection.events);\r\n    }\r\n\r\n    /**\r\n     * Initialize this protection system with a given manifest and optional audio\r\n     * and video stream information.\r\n     *\r\n     * @param {Object} manifest the json version of the manifest XML document for the\r\n     * desired content.  Applications can download their manifest using\r\n     * {@link module:MediaPlayer#retrieveManifest}\r\n     * @param {StreamInfo} [aInfo] audio stream information\r\n     * @param {StreamInfo} [vInfo] video stream information\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @todo This API will change when we have better support for allowing applications\r\n     * to select different adaptation sets for playback.  Right now it is clunky for\r\n     * applications to create {@link StreamInfo} with the right information,\r\n     */\r\n    function initialize(manifest, aInfo, vInfo) {\r\n\r\n        // TODO: We really need to do much more here... We need to be smarter about knowing\r\n        // which adaptation sets for which we have initialized, including the default key ID\r\n        // value from the ContentProtection elements so we know whether or not we still need to\r\n        // select key systems and acquire keys.\r\n        if (!initialized) {\r\n\r\n            var streamInfo;\r\n\r\n            if (!aInfo && !vInfo) {\r\n                // Look for ContentProtection elements.  InitData can be provided by either the\r\n                // dash264drm:Pssh ContentProtection format or a DRM-specific format.\r\n                streamInfo = adapter.getStreamsInfo(manifest)[0]; // TODO: Single period only for now. See TODO above\r\n            }\r\n\r\n            audioInfo = aInfo || (streamInfo ? adapter.getMediaInfoForType(manifest, streamInfo, 'audio') : null);\r\n            videoInfo = vInfo || (streamInfo ? adapter.getMediaInfoForType(manifest, streamInfo, 'video') : null);\r\n\r\n            var mediaInfo = (videoInfo) ? videoInfo : audioInfo; // We could have audio or video only\r\n\r\n            // ContentProtection elements are specified at the AdaptationSet level, so the CP for audio\r\n            // and video will be the same.  Just use one valid MediaInfo object\r\n            var supportedKS = protectionKeyController.getSupportedKeySystemsFromContentProtection(mediaInfo.contentProtection);\r\n            if (supportedKS && supportedKS.length > 0) {\r\n                selectKeySystem(supportedKS, true);\r\n            }\r\n\r\n            initialized = true;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Create a new key session associated with the given initialization data from\r\n     * the MPD or from the PSSH box in the media\r\n     *\r\n     * @param {ArrayBuffer} initData the initialization data\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionCreated\r\n     * @todo In older versions of the EME spec, there was a one-to-one relationship between\r\n     * initialization data and key sessions.  That is no longer true in the latest APIs.  This\r\n     * API will need to modified (and a new \"generateRequest(keySession, initData)\" API created)\r\n     * to come up to speed with the latest EME standard\r\n     */\r\n    function createKeySession(initData) {\r\n        var initDataForKS = CommonEncryption.getPSSHForKeySystem(keySystem, initData);\r\n        if (initDataForKS) {\r\n\r\n            // Check for duplicate initData\r\n            var currentInitData = protectionModel.getAllInitData();\r\n            for (var i = 0; i < currentInitData.length; i++) {\r\n                if (protectionKeyController.initDataEquals(initDataForKS, currentInitData[i])) {\r\n                    log('DRM: Ignoring initData because we have already seen it!');\r\n                    return;\r\n                }\r\n            }\r\n            try {\r\n                protectionModel.createKeySession(initDataForKS, sessionType);\r\n            } catch (error) {\r\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Error creating key session! ' + error.message});\r\n            }\r\n        } else {\r\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Selected key system is ' + keySystem.systemString + '.  needkey/encrypted event contains no initData corresponding to that key system!'});\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Loads a key session with the given session ID from persistent storage.  This\r\n     * essentially creates a new key session\r\n     *\r\n     * @param {string} sessionID\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionCreated\r\n     */\r\n    function loadKeySession(sessionID) {\r\n        protectionModel.loadKeySession(sessionID);\r\n    }\r\n\r\n    /**\r\n     * Removes the given key session from persistent storage and closes the session\r\n     * as if {@link ProtectionController#closeKeySession}\r\n     * was called\r\n     *\r\n     * @param {SessionToken} sessionToken the session\r\n     * token\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionRemoved\r\n     * @fires ProtectionController#KeySessionClosed\r\n     */\r\n    function removeKeySession(sessionToken) {\r\n        protectionModel.removeKeySession(sessionToken);\r\n    }\r\n\r\n    /**\r\n     * Closes the key session and releases all associated decryption keys.  These\r\n     * keys will no longer be available for decrypting media\r\n     *\r\n     * @param {SessionToken} sessionToken the session\r\n     * token\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#KeySessionClosed\r\n     */\r\n    function closeKeySession(sessionToken) {\r\n        protectionModel.closeKeySession(sessionToken);\r\n    }\r\n\r\n    /**\r\n     * Sets a server certificate for use by the CDM when signing key messages\r\n     * intended for a particular license server.  This will fire\r\n     * an error event if a key system has not yet been selected.\r\n     *\r\n     * @param {ArrayBuffer} serverCertificate a CDM-specific license server\r\n     * certificate\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     * @fires ProtectionController#ServerCertificateUpdated\r\n     */\r\n    function setServerCertificate(serverCertificate) {\r\n        protectionModel.setServerCertificate(serverCertificate);\r\n    }\r\n\r\n    /**\r\n     * Associate this protection system with the given HTMLMediaElement.  This\r\n     * causes the system to register for needkey/encrypted events from the given\r\n     * element and provides a destination for setting of MediaKeys\r\n     *\r\n     * @param {HTMLMediaElement} element the media element to which the protection\r\n     * system should be associated\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setMediaElement(element) {\r\n        if (element) {\r\n            protectionModel.setMediaElement(element);\r\n            eventBus.on(Events.NEED_KEY, onNeedKey, this);\r\n            eventBus.on(Events.INTERNAL_KEY_MESSAGE, onKeyMessage, this);\r\n        } else if (element === null) {\r\n            protectionModel.setMediaElement(element);\r\n            eventBus.off(Events.NEED_KEY, onNeedKey, this);\r\n            eventBus.off(Events.INTERNAL_KEY_MESSAGE, onKeyMessage, this);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Sets the session type to use when creating key sessions.  Either \"temporary\" or\r\n     * \"persistent-license\".  Default is \"temporary\".\r\n     *\r\n     * @param {string} value the session type\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setSessionType(value) {\r\n        sessionType = value;\r\n    }\r\n\r\n    /**\r\n     * Sets the robustness level for video and audio capabilities. Optional to remove Chrome warnings.\r\n     * Possible values are SW_SECURE_CRYPTO, SW_SECURE_DECODE, HW_SECURE_CRYPTO, HW_SECURE_CRYPTO, HW_SECURE_DECODE, HW_SECURE_ALL.\r\n     *\r\n     * @param {string} level the robustness level\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setRobustnessLevel(level) {\r\n        robustnessLevel = level;\r\n    }\r\n\r\n    /**\r\n     * Attach KeySystem-specific data to use for license acquisition with EME\r\n     *\r\n     * @param {Object} data an object containing property names corresponding to\r\n     * key system name strings (e.g. \"org.w3.clearkey\") and associated values\r\n     * being instances of {@link ProtectionData}\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function setProtectionData(data) {\r\n        protDataSet = data;\r\n    }\r\n\r\n    /**\r\n     * Destroys all protection data associated with this protection set.  This includes\r\n     * deleting all key sessions.  In the case of persistent key sessions, the sessions\r\n     * will simply be unloaded and not deleted.  Additionally, if this protection set is\r\n     * associated with a HTMLMediaElement, it will be detached from that element.\r\n     *\r\n     * @memberof module:ProtectionController\r\n     * @instance\r\n     */\r\n    function reset() {\r\n        setMediaElement(null);\r\n\r\n        keySystem = undefined;//TODO-Refactor look at why undefined is needed for this. refactor\r\n\r\n        if (protectionModel) {\r\n            protectionModel.reset();\r\n            protectionModel = null;\r\n        }\r\n    }\r\n\r\n    ///////////////\r\n    // Private\r\n    ///////////////\r\n\r\n    function getProtData(keySystem) {\r\n        var protData = null;\r\n        var keySystemString = keySystem.systemString;\r\n\r\n        if (protDataSet) {\r\n            protData = (keySystemString in protDataSet) ? protDataSet[keySystemString] : null;\r\n        }\r\n        return protData;\r\n    }\r\n\r\n    function selectKeySystem(supportedKS, fromManifest) {\r\n\r\n        var self = this;\r\n\r\n        // Build our request object for requestKeySystemAccess\r\n        var audioCapabilities = [];\r\n        var videoCapabilities = [];\r\n\r\n        if (videoInfo) {\r\n            videoCapabilities.push(new MediaCapability(videoInfo.codec, robustnessLevel));\r\n        }\r\n        if (audioInfo) {\r\n            audioCapabilities.push(new MediaCapability(audioInfo.codec, robustnessLevel));\r\n        }\r\n        var ksConfig = new KeySystemConfiguration(\r\n                audioCapabilities, videoCapabilities, 'optional',\r\n                (sessionType === 'temporary') ? 'optional' : 'required',\r\n                [sessionType]);\r\n        var requestedKeySystems = [];\r\n\r\n        var ksIdx;\r\n        if (keySystem) {\r\n            // We have a key system\r\n            for (ksIdx = 0; ksIdx < supportedKS.length; ksIdx++) {\r\n                if (keySystem === supportedKS[ksIdx].ks) {\r\n\r\n                    requestedKeySystems.push({ks: supportedKS[ksIdx].ks, configs: [ksConfig]});\r\n\r\n                    // Ensure that we would be granted key system access using the key\r\n                    // system and codec information\r\n                    let onKeySystemAccessComplete = function (event) {\r\n                        eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\r\n                        if (event.error) {\r\n                            if (!fromManifest) {\r\n                                eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {error: 'DRM: KeySystem Access Denied! -- ' + event.error});\r\n                            }\r\n                        } else {\r\n                            log('DRM: KeySystem Access Granted');\r\n                            eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: event.data});\r\n                            createKeySession(supportedKS[ksIdx].initData);\r\n                        }\r\n                    };\r\n                    eventBus.on(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\r\n                    protectionModel.requestKeySystemAccess(requestedKeySystems);\r\n                    break;\r\n                }\r\n            }\r\n        }\r\n        else if (keySystem === undefined) {\r\n            // First time through, so we need to select a key system\r\n            keySystem = null;\r\n            pendingNeedKeyData.push(supportedKS);\r\n\r\n            // Add all key systems to our request list since we have yet to select a key system\r\n            for (var i = 0; i < supportedKS.length; i++) {\r\n                requestedKeySystems.push({ks: supportedKS[i].ks, configs: [ksConfig]});\r\n            }\r\n\r\n            var keySystemAccess;\r\n            var onKeySystemAccessComplete = function (event) {\r\n                eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\r\n                if (event.error) {\r\n                    keySystem = undefined;\r\n                    eventBus.off(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\r\n\r\n                    if (!fromManifest) {\r\n                        eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: null, error: 'DRM: KeySystem Access Denied! -- ' + event.error});\r\n                    }\r\n                } else {\r\n                    keySystemAccess = event.data;\r\n                    log('DRM: KeySystem Access Granted (' + keySystemAccess.keySystem.systemString + ')!  Selecting key system...');\r\n                    protectionModel.selectKeySystem(keySystemAccess);\r\n                }\r\n            };\r\n            var onKeySystemSelected = function (event) {\r\n                eventBus.off(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\r\n                eventBus.off(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\r\n                if (!event.error) {\r\n                    keySystem = protectionModel.getKeySystem();\r\n                    eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: keySystemAccess});\r\n                    for (var i = 0; i < pendingNeedKeyData.length; i++) {\r\n                        for (ksIdx = 0; ksIdx < pendingNeedKeyData[i].length; ksIdx++) {\r\n                            if (keySystem === pendingNeedKeyData[i][ksIdx].ks) {\r\n                                createKeySession(pendingNeedKeyData[i][ksIdx].initData);\r\n                                break;\r\n                            }\r\n                        }\r\n                    }\r\n                } else {\r\n                    keySystem = undefined;\r\n                    if (!fromManifest) {\r\n                        eventBus.trigger(Events.KEY_SYSTEM_SELECTED, {data: null, error: 'DRM: Error selecting key system! -- ' + event.error});\r\n                    }\r\n                }\r\n            };\r\n            eventBus.on(Events.INTERNAL_KEY_SYSTEM_SELECTED, onKeySystemSelected, self);\r\n            eventBus.on(Events.KEY_SYSTEM_ACCESS_COMPLETE, onKeySystemAccessComplete, self);\r\n            protectionModel.requestKeySystemAccess(requestedKeySystems);\r\n        } else {\r\n            // We are in the process of selecting a key system, so just save the data\r\n            pendingNeedKeyData.push(supportedKS);\r\n        }\r\n    }\r\n\r\n    function sendLicenseRequestCompleteEvent(data, error) {\r\n        eventBus.trigger(Events.LICENSE_REQUEST_COMPLETE, {data: data, error: error});\r\n    }\r\n\r\n    function onKeyMessage(e) {\r\n        log('DRM: onKeyMessage');\r\n        if (e.error) {\r\n            log(e.error);\r\n            return;\r\n        }\r\n\r\n        // Dispatch event to applications indicating we received a key message\r\n        var keyMessage = e.data;\r\n        eventBus.trigger(Events.KEY_MESSAGE, {data: keyMessage});\r\n        var messageType = (keyMessage.messageType) ? keyMessage.messageType : 'license-request';\r\n        var message = keyMessage.message;\r\n        var sessionToken = keyMessage.sessionToken;\r\n        var protData = getProtData(keySystem);\r\n        var keySystemString = keySystem.systemString;\r\n        var licenseServerData = protectionKeyController.getLicenseServer(keySystem, protData, messageType);\r\n        var eventData = { sessionToken: sessionToken, messageType: messageType };\r\n\r\n        // Message not destined for license server\r\n        if (!licenseServerData) {\r\n            log('DRM: License server request not required for this message (type = ' + e.data.messageType + ').  Session ID = ' + sessionToken.getSessionID());\r\n            sendLicenseRequestCompleteEvent(eventData);\r\n            return;\r\n        }\r\n\r\n        // Perform any special handling for ClearKey\r\n        if (protectionKeyController.isClearKey(keySystem)) {\r\n            var clearkeys = protectionKeyController.processClearKeyLicenseRequest(protData, message);\r\n            if (clearkeys)  {\r\n                log('DRM: ClearKey license request handled by application!');\r\n                sendLicenseRequestCompleteEvent(eventData);\r\n                protectionModel.updateKeySession(sessionToken, clearkeys);\r\n                return;\r\n            }\r\n        }\r\n\r\n        // All remaining key system scenarios require a request to a remote license server\r\n        var xhr = new XMLHttpRequest();\r\n\r\n        // Determine license server URL\r\n        var url = null;\r\n        if (protData && protData.serverURL) {\r\n            var serverURL = protData.serverURL;\r\n            if (typeof serverURL === 'string' && serverURL !== '') {\r\n                url = serverURL;\r\n            } else if (typeof serverURL === 'object' && serverURL.hasOwnProperty(messageType)) {\r\n                url = serverURL[messageType];\r\n            }\r\n        } else if (protData && protData.laURL && protData.laURL !== '') {\r\n            // TODO: Deprecated!\r\n            url = protData.laURL;\r\n        } else {\r\n            url = keySystem.getLicenseServerURLFromInitData(CommonEncryption.getPSSHData(sessionToken.initData));\r\n            if (!url) {\r\n                url = e.data.laURL;\r\n            }\r\n        }\r\n        // Possibly update or override the URL based on the message\r\n        url = licenseServerData.getServerURLFromMessage(url, message, messageType);\r\n\r\n        // Ensure valid license server URL\r\n        if (!url) {\r\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: No license server URL specified!');\r\n            return;\r\n        }\r\n\r\n        xhr.open(licenseServerData.getHTTPMethod(messageType), url, true);\r\n        xhr.responseType = licenseServerData.getResponseType(keySystemString, messageType);\r\n        xhr.onload = function () {\r\n            if (this.status == 200) {\r\n                sendLicenseRequestCompleteEvent(eventData);\r\n                protectionModel.updateKeySession(sessionToken,\r\n                        licenseServerData.getLicenseMessage(this.response, keySystemString, messageType));\r\n            } else {\r\n                sendLicenseRequestCompleteEvent(eventData,\r\n                        'DRM: ' + keySystemString + ' update, XHR status is \"' + this.statusText + '\" (' + this.status +\r\n                        '), expected to be 200. readyState is ' + this.readyState +\r\n                        '.  Response is ' + ((this.response) ? licenseServerData.getErrorResponse(this.response, keySystemString, messageType) : 'NONE'));\r\n            }\r\n        };\r\n        xhr.onabort = function () {\r\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: ' + keySystemString + ' update, XHR aborted. status is \"' + this.statusText + '\" (' + this.status + '), readyState is ' + this.readyState);\r\n        };\r\n        xhr.onerror = function () {\r\n            sendLicenseRequestCompleteEvent(eventData, 'DRM: ' + keySystemString + ' update, XHR error. status is \"' + this.statusText + '\" (' + this.status + '), readyState is ' + this.readyState);\r\n        };\r\n\r\n        // Set optional XMLHttpRequest headers from protection data and message\r\n        var updateHeaders = function (headers) {\r\n            var key;\r\n            if (headers) {\r\n                for (key in headers) {\r\n                    if ('authorization' === key.toLowerCase()) {\r\n                        xhr.withCredentials = true;\r\n                    }\r\n                    xhr.setRequestHeader(key, headers[key]);\r\n                }\r\n            }\r\n        };\r\n        if (protData) {\r\n            updateHeaders(protData.httpRequestHeaders);\r\n        }\r\n        updateHeaders(keySystem.getRequestHeadersFromMessage(message));\r\n\r\n        // Set withCredentials property from protData\r\n        if (protData && protData.withCredentials) {\r\n            xhr.withCredentials = true;\r\n        }\r\n\r\n        xhr.send(keySystem.getLicenseRequestFromMessage(message));\r\n    }\r\n\r\n    function onNeedKey(event) {\r\n        log('DRM: onNeedKey');\r\n        // Ignore non-cenc initData\r\n        if (event.key.initDataType !== 'cenc') {\r\n            log('DRM:  Only \\'cenc\\' initData is supported!  Ignoring initData of type: ' + event.key.initDataType);\r\n            return;\r\n        }\r\n\r\n        // Some browsers return initData as Uint8Array (IE), some as ArrayBuffer (Chrome).\r\n        // Convert to ArrayBuffer\r\n        var abInitData = event.key.initData;\r\n        if (ArrayBuffer.isView(abInitData)) {\r\n            abInitData = abInitData.buffer;\r\n        }\r\n\r\n        log('DRM: initData:', String.fromCharCode.apply(null, new Uint8Array(abInitData)));\r\n\r\n        var supportedKS = protectionKeyController.getSupportedKeySystems(abInitData, protDataSet);\r\n        if (supportedKS.length === 0) {\r\n            log('DRM: Received needkey event with initData, but we don\\'t support any of the key systems!');\r\n            return;\r\n        }\r\n\r\n        selectKeySystem(supportedKS, false);\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        createKeySession: createKeySession,\r\n        loadKeySession: loadKeySession,\r\n        removeKeySession: removeKeySession,\r\n        closeKeySession: closeKeySession,\r\n        setServerCertificate: setServerCertificate,\r\n        setMediaElement: setMediaElement,\r\n        setSessionType: setSessionType,\r\n        setRobustnessLevel: setRobustnessLevel,\r\n        setProtectionData: setProtectionData,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n    return instance;\r\n}\r\n\r\nProtectionController.__dashjs_factory_name = 'ProtectionController';\r\nexport default FactoryMaker.getClassFactory(ProtectionController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport CommonEncryption from './../CommonEncryption';\r\nimport KeySystemClearKey from './../drm/KeySystemClearKey';\r\nimport KeySystemWidevine from './../drm/KeySystemWidevine';\r\nimport KeySystemPlayReady from './../drm/KeySystemPlayReady';\r\nimport DRMToday from './../servers/DRMToday';\r\nimport PlayReady from './../servers/PlayReady';\r\nimport Widevine from './../servers/Widevine';\r\nimport ClearKey from './../servers/ClearKey';\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\n\r\n/**\r\n * @module ProtectionKeyController\r\n * @description Media protection key system functionality that can be modified/overridden by applications\r\n */\r\nfunction ProtectionKeyController() {\r\n\r\n    let context = this.context;\r\n\r\n    let instance,\r\n        log,\r\n        keySystems,\r\n        clearkeyKeySystem;\r\n\r\n    function setConfig(config) {\r\n        if (!config) return;\r\n\r\n        if (config.log) {\r\n            log = config.log;\r\n        }\r\n    }\r\n\r\n    function initialize() {\r\n        keySystems = [];\r\n\r\n        var keySystem;\r\n\r\n        // PlayReady\r\n        keySystem = KeySystemPlayReady(context).getInstance();\r\n        keySystems.push(keySystem);\r\n\r\n        // Widevine\r\n        keySystem = KeySystemWidevine(context).getInstance();\r\n        keySystems.push(keySystem);\r\n\r\n        // ClearKey\r\n        keySystem = KeySystemClearKey(context).getInstance();\r\n        keySystems.push(keySystem);\r\n        clearkeyKeySystem = keySystem;\r\n    }\r\n\r\n    /**\r\n     * Returns a prioritized list of key systems supported\r\n     * by this player (not necessarily those supported by the\r\n     * user agent)\r\n     *\r\n     * @returns {Array.<KeySystem>} a prioritized\r\n     * list of key systems\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getKeySystems() {\r\n        return keySystems;\r\n    }\r\n\r\n    /**\r\n     * Returns the key system associated with the given key system string\r\n     * name (i.e. 'org.w3.clearkey')\r\n     *\r\n     * @param {string} systemString the system string\r\n     * @returns {KeySystem|null} the key system\r\n     * or null if no supported key system is associated with the given key\r\n     * system string\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getKeySystemBySystemString(systemString) {\r\n        for (var i = 0; i < keySystems.length; i++) {\r\n            if (keySystems[i].systemString === systemString) {\r\n                return keySystems[i];\r\n            }\r\n        }\r\n        return null;\r\n    }\r\n\r\n    /**\r\n     * Determines whether the given key system is ClearKey.  This is\r\n     * necessary because the EME spec defines ClearKey and its method\r\n     * for providing keys to the key session; and this method has changed\r\n     * between the various API versions.  Our EME-specific ProtectionModels\r\n     * must know if the system is ClearKey so that it can format the keys\r\n     * according to the particular spec version.\r\n     *\r\n     * @param {Object} keySystem the key\r\n     * @returns {boolean} true if this is the ClearKey key system, false\r\n     * otherwise\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function isClearKey(keySystem) {\r\n        return (keySystem === clearkeyKeySystem);\r\n    }\r\n\r\n    /**\r\n     * Check equality of initData array buffers.\r\n     *\r\n     * @param {ArrayBuffer} initData1 - first initData\r\n     * @param {ArrayBuffer} initData2 - second initData\r\n     * @returns {boolean} true if the initData arrays are equal in size and\r\n     * contents, false otherwise\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function initDataEquals(initData1, initData2) {\r\n        if (initData1.byteLength === initData2.byteLength) {\r\n            var data1 = new Uint8Array(initData1);\r\n            var data2 = new Uint8Array(initData2);\r\n\r\n            for (var j = 0; j < data1.length; j++) {\r\n                if (data1[j] !== data2[j]) {\r\n                    return false;\r\n                }\r\n            }\r\n            return true;\r\n        }\r\n        return false;\r\n    }\r\n\r\n    /**\r\n     * Returns a set of supported key systems and CENC initialization data\r\n     * from the given array of ContentProtection elements.  Only\r\n     * key systems that are supported by this player will be returned.\r\n     * Key systems are returned in priority order (highest first).\r\n     *\r\n     * @param {Array.<Object>} cps - array of content protection elements parsed\r\n     * from the manifest\r\n     * @returns {Array.<Object>} array of objects indicating which supported key\r\n     * systems were found.  Empty array is returned if no\r\n     * supported key systems were found\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getSupportedKeySystemsFromContentProtection(cps) {\r\n        var cp, ks, ksIdx, cpIdx;\r\n        var supportedKS = [];\r\n\r\n        if (cps) {\r\n            for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\r\n                ks = keySystems[ksIdx];\r\n                for (cpIdx = 0; cpIdx < cps.length; ++cpIdx) {\r\n                    cp = cps[cpIdx];\r\n                    if (cp.schemeIdUri.toLowerCase() === ks.schemeIdURI) {\r\n\r\n                        // Look for DRM-specific ContentProtection\r\n                        var initData = ks.getInitData(cp);\r\n                        if (!!initData) {\r\n                            supportedKS.push({\r\n                                ks: keySystems[ksIdx],\r\n                                initData: initData\r\n                            });\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n        }\r\n        return supportedKS;\r\n    }\r\n\r\n    /**\r\n     * Returns key systems supported by this player for the given PSSH\r\n     * initializationData. Only key systems supported by this player\r\n     * that have protection data present will be returned.  Key systems are returned in priority order\r\n     * (highest priority first)\r\n     *\r\n     * @param {ArrayBuffer} initData Concatenated PSSH data for all DRMs\r\n     * supported by the content\r\n     * @param {ProtectionData} protDataSet user specified protection data - license server url etc\r\n     * supported by the content\r\n     * @returns {Array.<Object>} array of objects indicating which supported key\r\n     * systems were found.  Empty array is returned if no\r\n     * supported key systems were found\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function getSupportedKeySystems(initData, protDataSet) {\r\n        var ksIdx;\r\n        var supportedKS = [];\r\n        var pssh = CommonEncryption.parsePSSHList(initData);\r\n\r\n        for (ksIdx = 0; ksIdx < keySystems.length; ++ksIdx) {\r\n            var keySystemString = keySystems[ksIdx].systemString;\r\n            var shouldNotFilterOutKeySystem = (protDataSet) ? keySystemString in protDataSet : true;\r\n\r\n            if (keySystems[ksIdx].uuid in pssh && shouldNotFilterOutKeySystem) {\r\n                supportedKS.push({\r\n                    ks: keySystems[ksIdx],\r\n                    initData: pssh[keySystems[ksIdx].uuid]\r\n                });\r\n            }\r\n        }\r\n        return supportedKS;\r\n    }\r\n\r\n    /**\r\n     * Returns the license server implementation data that should be used for this request.\r\n     *\r\n     * @param {KeySystem} keySystem the key system\r\n     * associated with this license request\r\n     * @param {ProtectionData} protData protection data to use for the\r\n     * request\r\n     * @param {string} [messageType=\"license-request\"] the message type associated with this\r\n     * request.  Supported message types can be found\r\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\r\n     * @returns {LicenseServer|null} the license server\r\n     * implementation that should be used for this request or null if the player should not\r\n     * pass messages of the given type to a license server\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     *\r\n     */\r\n    function getLicenseServer(keySystem, protData, messageType) {\r\n\r\n        // Our default server implementations do not do anything with \"license-release\" or\r\n        // \"individualization-request\" messages, so we just send a success event\r\n        if (messageType === 'license-release' || messageType === 'individualization-request') {\r\n            return null;\r\n        }\r\n\r\n        var licenseServerData = null;\r\n        if (protData && protData.hasOwnProperty('drmtoday')) {\r\n            licenseServerData = DRMToday(context).getInstance();\r\n        } else if (keySystem.systemString === 'com.widevine.alpha') {\r\n            licenseServerData = Widevine(context).getInstance();\r\n        } else if (keySystem.systemString === 'com.microsoft.playready') {\r\n            licenseServerData = PlayReady(context).getInstance();\r\n        } else if (keySystem.systemString === 'org.w3.clearkey') {\r\n            licenseServerData = ClearKey(context).getInstance();\r\n        }\r\n\r\n        return licenseServerData;\r\n    }\r\n\r\n    /**\r\n     * Allows application-specific retrieval of ClearKey keys.\r\n     *\r\n     * @param {ProtectionData} protData protection data to use for the\r\n     * request\r\n     * @param {ArrayBuffer} message the key message from the CDM\r\n     * @return {ClearKeyKeySet|null} the clear keys associated with\r\n     * the request or null if no keys can be returned by this function\r\n     * @memberof module:ProtectionKeyController\r\n     * @instance\r\n     */\r\n    function processClearKeyLicenseRequest(protData, message) {\r\n        try {\r\n            return clearkeyKeySystem.getClearKeysFromProtectionData(protData, message);\r\n        } catch (error) {\r\n            log('Failed to retrieve clearkeys from ProtectionData');\r\n            return null;\r\n        }\r\n    }\r\n\r\n    instance = {\r\n        initialize: initialize,\r\n        isClearKey: isClearKey,\r\n        initDataEquals: initDataEquals,\r\n        getKeySystems: getKeySystems,\r\n        getKeySystemBySystemString: getKeySystemBySystemString,\r\n        getSupportedKeySystemsFromContentProtection: getSupportedKeySystemsFromContentProtection,\r\n        getSupportedKeySystems: getSupportedKeySystems,\r\n        getLicenseServer: getLicenseServer,\r\n        processClearKeyLicenseRequest: processClearKeyLicenseRequest,\r\n        setConfig: setConfig\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionKeyController.__dashjs_factory_name = 'ProtectionKeyController';\r\nexport default FactoryMaker.getSingletonFactory(ProtectionKeyController);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\nimport KeyPair from '../vo/KeyPair';\r\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\n\r\nconst uuid = '1077efec-c0b2-4d02-ace3-3c1e52e2fb4b';\r\nconst systemString = 'org.w3.clearkey';\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemClearKey() {\r\n\r\n    let instance;\r\n    /**\r\n     * Returns desired clearkeys (as specified in the CDM message) from protection data\r\n     *\r\n     * @param {ProtectionData} protectionData the protection data\r\n     * @param {ArrayBuffer} message the ClearKey CDM message\r\n     * @returns {ClearKeyKeySet} the key set or null if none found\r\n     * @throws {Error} if a keyID specified in the CDM message was not found in the\r\n     * protection data\r\n     * @memberof KeySystemClearKey\r\n     */\r\n    function getClearKeysFromProtectionData(protectionData, message) {\r\n        var clearkeySet = null;\r\n        if (protectionData) {\r\n            // ClearKey is the only system that does not require a license server URL, so we\r\n            // handle it here when keys are specified in protection data\r\n            var jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\r\n            var keyPairs = [];\r\n            for (var i = 0; i < jsonMsg.kids.length; i++) {\r\n                var clearkeyID = jsonMsg.kids[i];\r\n                var clearkey = (protectionData.clearkeys.hasOwnProperty(clearkeyID)) ? protectionData.clearkeys[clearkeyID] : null;\r\n                if (!clearkey) {\r\n                    throw new Error('DRM: ClearKey keyID (' + clearkeyID + ') is not known!');\r\n                }\r\n                // KeyIDs from CDM are not base64 padded.  Keys may or may not be padded\r\n                keyPairs.push(new KeyPair(clearkeyID, clearkey));\r\n            }\r\n            clearkeySet = new ClearKeyKeySet(keyPairs);\r\n        }\r\n        return clearkeySet;\r\n    }\r\n\r\n    function getInitData(cp) {\r\n        return CommonEncryption.parseInitDataFromContentProtection(cp);\r\n    }\r\n\r\n    function getRequestHeadersFromMessage(/*message*/) {\r\n        return null;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        return new Uint8Array(message);\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(/*initData*/) {\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid: uuid,\r\n        schemeIdURI: schemeIdURI,\r\n        systemString: systemString,\r\n        getInitData: getInitData,\r\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\r\n        getClearKeysFromProtectionData: getClearKeysFromProtectionData\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemClearKey.__dashjs_factory_name = 'KeySystemClearKey';\r\nexport default FactoryMaker.getSingletonFactory(KeySystemClearKey);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Microsoft PlayReady DRM\r\n *\r\n * @class\r\n * @implements KeySystem\r\n */\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport Error from '../../vo/Error';\r\n\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\nimport BASE64 from '../../../../externals/base64';\r\n\r\nconst uuid = '9a04f079-9840-4286-ab92-e65be0885f95';\r\nconst systemString = 'com.microsoft.playready';\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemPlayReady() {\r\n\r\n    let instance;\r\n    let messageFormat = 'utf16';\r\n\r\n    function getRequestHeadersFromMessage(message) {\r\n        var msg,\r\n            xmlDoc;\r\n        var headers = {};\r\n        var parser = new DOMParser();\r\n        var dataview = (messageFormat === 'utf16') ? new Uint16Array(message) : new Uint8Array(message);\r\n\r\n        msg = String.fromCharCode.apply(null, dataview);\r\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\r\n\r\n        var headerNameList = xmlDoc.getElementsByTagName('name');\r\n        var headerValueList = xmlDoc.getElementsByTagName('value');\r\n        for (var i = 0; i < headerNameList.length; i++) {\r\n            headers[headerNameList[i].childNodes[0].nodeValue] = headerValueList[i].childNodes[0].nodeValue;\r\n        }\r\n        // some versions of the PlayReady CDM return 'Content' instead of 'Content-Type'.\r\n        // this is NOT w3c conform and license servers may reject the request!\r\n        // -> rename it to proper w3c definition!\r\n        if (headers.hasOwnProperty('Content')) {\r\n            headers['Content-Type'] = headers.Content;\r\n            delete headers.Content;\r\n        }\r\n        return headers;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        var msg,\r\n            xmlDoc;\r\n        var licenseRequest = null;\r\n        var parser = new DOMParser();\r\n        var dataview = (messageFormat === 'utf16') ? new Uint16Array(message) : new Uint8Array(message);\r\n\r\n        msg = String.fromCharCode.apply(null, dataview);\r\n        xmlDoc = parser.parseFromString(msg, 'application/xml');\r\n\r\n        if (xmlDoc.getElementsByTagName('Challenge')[0]) {\r\n            var Challenge = xmlDoc.getElementsByTagName('Challenge')[0].childNodes[0].nodeValue;\r\n            if (Challenge) {\r\n                licenseRequest = BASE64.decode(Challenge);\r\n            }\r\n        }\r\n        return licenseRequest;\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(initData) {\r\n        if (initData) {\r\n            var data = new DataView(initData);\r\n            var numRecords = data.getUint16(4, true);\r\n            var offset = 6;\r\n            var parser = new DOMParser();\r\n\r\n            for (var i = 0; i < numRecords; i++) {\r\n                // Parse the PlayReady Record header\r\n                var recordType = data.getUint16(offset, true);\r\n                offset += 2;\r\n                var recordLength = data.getUint16(offset, true);\r\n                offset += 2;\r\n                if (recordType !== 0x0001) {\r\n                    offset += recordLength;\r\n                    continue;\r\n                }\r\n\r\n                var recordData = initData.slice(offset, offset + recordLength);\r\n                var record = String.fromCharCode.apply(null, new Uint16Array(recordData));\r\n                var xmlDoc = parser.parseFromString(record, 'application/xml');\r\n\r\n                // First try <LA_URL>\r\n                if (xmlDoc.getElementsByTagName('LA_URL')[0]) {\r\n                    var laurl = xmlDoc.getElementsByTagName('LA_URL')[0].childNodes[0].nodeValue;\r\n                    if (laurl) {\r\n                        return laurl;\r\n                    }\r\n                }\r\n\r\n                // Optionally, try <LUI_URL>\r\n                if (xmlDoc.getElementsByTagName('LUI_URL')[0]) {\r\n                    var luiurl = xmlDoc.getElementsByTagName('LUI_URL')[0].childNodes[0].nodeValue;\r\n                    if (luiurl) {\r\n                        return luiurl;\r\n                    }\r\n                }\r\n            }\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    function getInitData(cpData) {\r\n        // * desc@ getInitData\r\n        // *   generate PSSH data from PROHeader defined in MPD file\r\n        // *   PSSH format:\r\n        // *   size (4)\r\n        // *   box type(PSSH) (8)\r\n        // *   Protection SystemID (16)\r\n        // *   protection system data size (4) - length of decoded PROHeader\r\n        // *   decoded PROHeader data from MPD file\r\n        var PSSHBoxType = new Uint8Array([0x70, 0x73, 0x73, 0x68, 0x00, 0x00, 0x00, 0x00]); //'PSSH' 8 bytes\r\n        var playreadySystemID = new Uint8Array([0x9a, 0x04, 0xf0, 0x79, 0x98, 0x40, 0x42, 0x86, 0xab, 0x92, 0xe6, 0x5b, 0xe0, 0x88, 0x5f, 0x95]);\r\n\r\n        var byteCursor = 0;\r\n        var uint8arraydecodedPROHeader = null;\r\n\r\n        var PROSize,\r\n            PSSHSize,\r\n            PSSHBoxBuffer,\r\n            PSSHBox,\r\n            PSSHData;\r\n\r\n        // Handle common encryption PSSH\r\n        if ('pssh' in cpData) {\r\n            return CommonEncryption.parseInitDataFromContentProtection(cpData);\r\n        }\r\n        // Handle native MS PlayReady ContentProtection elements\r\n        if ('pro' in cpData) {\r\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.pro.__text);\r\n        }\r\n        else if ('prheader' in cpData) {\r\n            uint8arraydecodedPROHeader = BASE64.decodeArray(cpData.prheader.__text);\r\n        }\r\n        else {\r\n            return null;\r\n        }\r\n\r\n        PROSize = uint8arraydecodedPROHeader.length;\r\n        PSSHSize = 0x4 + PSSHBoxType.length + playreadySystemID.length + 0x4 + PROSize;\r\n\r\n        PSSHBoxBuffer = new ArrayBuffer(PSSHSize);\r\n\r\n        PSSHBox = new Uint8Array(PSSHBoxBuffer);\r\n        PSSHData = new DataView(PSSHBoxBuffer);\r\n\r\n        PSSHData.setUint32(byteCursor, PSSHSize);\r\n        byteCursor += 0x4;\r\n\r\n        PSSHBox.set(PSSHBoxType, byteCursor);\r\n        byteCursor += PSSHBoxType.length;\r\n\r\n        PSSHBox.set(playreadySystemID, byteCursor);\r\n        byteCursor += playreadySystemID.length;\r\n\r\n        PSSHData.setUint32(byteCursor, PROSize);\r\n        byteCursor += 0x4;\r\n\r\n        PSSHBox.set(uint8arraydecodedPROHeader, byteCursor);\r\n        byteCursor += PROSize;\r\n\r\n        return PSSHBox.buffer;\r\n    }\r\n\r\n    /**\r\n     * It seems that some PlayReady implementations return their XML-based CDM\r\n     * messages using UTF16, while others return them as UTF8.  Use this function\r\n     * to modify the message format to expect when parsing CDM messages.\r\n     *\r\n     * @param {string} format the expected message format.  Either \"utf8\" or \"utf16\".\r\n     * @throws {Error} Specified message format is not one of \"utf8\" or \"utf16\"\r\n     */\r\n    function setPlayReadyMessageFormat(format) {\r\n        if (format !== 'utf8' && format !== 'utf16') {\r\n            throw new Error('Illegal PlayReady message format! -- ' + format);\r\n        }\r\n        messageFormat = format;\r\n    }\r\n\r\n    instance = {\r\n        uuid: uuid,\r\n        schemeIdURI: schemeIdURI,\r\n        systemString: systemString,\r\n        getInitData: getInitData,\r\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\r\n        setPlayReadyMessageFormat: setPlayReadyMessageFormat\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemPlayReady.__dashjs_factory_name = 'KeySystemPlayReady';\r\nexport default FactoryMaker.getSingletonFactory(KeySystemPlayReady);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Google Widevine DRM\r\n *\r\n * @class\r\n * @implements MediaPlayer.dependencies.protection.KeySystem\r\n */\r\n\r\nimport CommonEncryption from '../CommonEncryption';\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\n\r\nconst uuid = 'edef8ba9-79d6-4ace-a3c8-27dcd51d21ed';\r\nconst systemString = 'com.widevine.alpha';\r\nconst schemeIdURI = 'urn:uuid:' + uuid;\r\n\r\nfunction KeySystemWidevine() {\r\n\r\n    let instance;\r\n\r\n    function getInitData(cp) {\r\n        return CommonEncryption.parseInitDataFromContentProtection(cp);\r\n    }\r\n\r\n    function getRequestHeadersFromMessage(/*message*/) {\r\n        return null;\r\n    }\r\n\r\n    function getLicenseRequestFromMessage(message) {\r\n        return new Uint8Array(message);\r\n    }\r\n\r\n    function getLicenseServerURLFromInitData(/*initData*/) {\r\n        return null;\r\n    }\r\n\r\n    instance = {\r\n        uuid: uuid,\r\n        schemeIdURI: schemeIdURI,\r\n        systemString: systemString,\r\n        getInitData: getInitData,\r\n        getRequestHeadersFromMessage: getRequestHeadersFromMessage,\r\n        getLicenseRequestFromMessage: getLicenseRequestFromMessage,\r\n        getLicenseServerURLFromInitData: getLicenseServerURLFromInitData,\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nKeySystemWidevine.__dashjs_factory_name = 'KeySystemWidevine';\r\nexport default FactoryMaker.getSingletonFactory(KeySystemWidevine);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Initial implementation of EME\r\n *\r\n * Implemented by Google Chrome prior to v36\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\r\nimport NeedKey from '../vo/NeedKey';\r\nimport KeyError from '../vo/KeyError';\r\nimport KeyMessage from '../vo/KeyMessage';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\r\nimport KeySystemAccess from '../vo/KeySystemAccess';\r\nimport Events from '../../../core/events/Events';\r\nimport ErrorHandler from '../../utils/ErrorHandler';\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\n\r\nfunction ProtectionModel_01b(config) {\r\n\r\n    let context = this.context;\r\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    let log = config.log;\r\n    let api = config.api;\r\n\r\n    let instance,\r\n        videoElement,\r\n        keySystem,\r\n        protectionKeyController,\r\n        errHandler,\r\n\r\n        // With this version of the EME APIs, sessionIDs are not assigned to\r\n        // sessions until the first key message is received.  We are assuming\r\n        // that in the case of multiple sessions, key messages will be received\r\n        // in the order that generateKeyRequest() is called.\r\n        // Holding spot for newly-created sessions until we determine whether or\r\n        // not the CDM supports sessionIDs\r\n        pendingSessions,\r\n\r\n        // List of sessions that have been initialized.  Only the first position will\r\n        // be used in the case that the CDM does not support sessionIDs\r\n        sessions,\r\n\r\n        // Not all CDMs support the notion of sessionIDs.  Without sessionIDs\r\n        // there is no way for us to differentiate between sessions, therefore\r\n        // we must only allow a single session.  Once we receive the first key\r\n        // message we can set this flag to determine if more sessions are allowed\r\n        moreSessionsAllowed,\r\n\r\n        // This is our main event handler for all desired HTMLMediaElement events\r\n        // related to EME.  These events are translated into our API-independent\r\n        // versions of the same events\r\n        eventHandler;\r\n\r\n    function setup() {\r\n        videoElement = null;\r\n        keySystem = null;\r\n        pendingSessions = [];\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        errHandler = ErrorHandler(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        if (videoElement) {\r\n            removeEventListeners();\r\n        }\r\n        for (var i = 0; i < sessions.length; i++) {\r\n            closeKeySession(sessions[i]);\r\n        }\r\n        eventBus.trigger(Events.TEARDOWN_COMPLETE);\r\n    }\r\n\r\n    function getKeySystem() {\r\n        return keySystem;\r\n    }\r\n\r\n    function getAllInitData() {\r\n        var retVal = [];\r\n        for (let i = 0; i < pendingSessions.length; i++) {\r\n            retVal.push(pendingSessions[i].initData);\r\n        }\r\n        for (let i = 0; i < sessions.length; i++) {\r\n            retVal.push(sessions[i].initData);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n        var ve = videoElement;\r\n        if (!ve) { // Must have a video element to do this capability tests\r\n            ve = document.createElement('video');\r\n        }\r\n\r\n        // Try key systems in order, first one with supported key system configuration\r\n        // is used\r\n        var found = false;\r\n        for (var ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\r\n            var systemString = ksConfigurations[ksIdx].ks.systemString;\r\n            var configs = ksConfigurations[ksIdx].configs;\r\n            var supportedAudio = null;\r\n            var supportedVideo = null;\r\n\r\n            // Try key system configs in order, first one with supported audio/video\r\n            // is used\r\n            for (var configIdx = 0; configIdx < configs.length; configIdx++) {\r\n                //var audios = configs[configIdx].audioCapabilities;\r\n                var videos = configs[configIdx].videoCapabilities;\r\n                // Look for supported video container/codecs\r\n                if (videos && videos.length !== 0) {\r\n                    supportedVideo = []; // Indicates that we have a requested video config\r\n                    for (var videoIdx = 0; videoIdx < videos.length; videoIdx++) {\r\n                        if (ve.canPlayType(videos[videoIdx].contentType, systemString) !== '') {\r\n                            supportedVideo.push(videos[videoIdx]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // No supported audio or video in this configuration OR we have\r\n                // requested audio or video configuration that is not supported\r\n                if ((!supportedAudio && !supportedVideo) ||\r\n                    (supportedAudio && supportedAudio.length === 0) ||\r\n                    (supportedVideo && supportedVideo.length === 0)) {\r\n                    continue;\r\n                }\r\n\r\n                // This configuration is supported\r\n                found = true;\r\n                var ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\r\n                var ks = protectionKeyController.getKeySystemBySystemString(systemString);\r\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, { data: new KeySystemAccess(ks, ksConfig) });\r\n                break;\r\n            }\r\n        }\r\n        if (!found) {\r\n            eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied! -- No valid audio/video content configurations detected!'});\r\n        }\r\n    }\r\n\r\n    function selectKeySystem(keySystemAccess) {\r\n        keySystem = keySystemAccess.keySystem;\r\n        eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement) {\r\n            return;\r\n        }\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            removeEventListeners();\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener(api.keyerror, eventHandler);\r\n            videoElement.addEventListener(api.needkey, eventHandler);\r\n            videoElement.addEventListener(api.keymessage, eventHandler);\r\n            videoElement.addEventListener(api.keyadded, eventHandler);\r\n            eventBus.trigger(Events.VIDEO_ELEMENT_SELECTED);\r\n        }\r\n    }\r\n\r\n    function createKeySession(initData /*, keySystemType */) {\r\n\r\n        if (!keySystem) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        // Determine if creating a new session is allowed\r\n        if (moreSessionsAllowed || sessions.length === 0) {\r\n\r\n            var newSession = { // Implements SessionToken\r\n                sessionID: null,\r\n                initData: initData,\r\n                getSessionID: function () {\r\n                    return this.sessionID;\r\n                },\r\n\r\n                getExpirationTime: function () {\r\n                    return NaN;\r\n                },\r\n\r\n                getSessionType: function () {\r\n                    return 'temporary';\r\n                }\r\n            };\r\n            pendingSessions.push(newSession);\r\n\r\n            // Send our request to the CDM\r\n            videoElement[api.generateKeyRequest](keySystem.systemString, new Uint8Array(initData));\r\n\r\n            return newSession;\r\n\r\n        } else {\r\n            throw new Error('Multiple sessions not allowed!');\r\n        }\r\n\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n        var sessionID = sessionToken.sessionID;\r\n        if (!protectionKeyController.isClearKey(keySystem)) {\r\n            // Send our request to the CDM\r\n            videoElement[api.addKey](keySystem.systemString,\r\n                new Uint8Array(message), sessionToken.initData, sessionID);\r\n        } else {\r\n            // For clearkey, message is a ClearKeyKeySet\r\n            for (var i = 0; i < message.keyPairs.length; i++) {\r\n                videoElement[api.addKey](keySystem.systemString,\r\n                    message.keyPairs[i].key, message.keyPairs[i].keyID, sessionID);\r\n            }\r\n        }\r\n    }\r\n\r\n    function closeKeySession(sessionToken) {\r\n        // Send our request to the CDM\r\n        videoElement[api.cancelKeyRequest](keySystem.systemString, sessionToken.sessionID);\r\n    }\r\n\r\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\r\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\r\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\r\n\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                var sessionToken = null;\r\n                switch (event.type) {\r\n\r\n                    case api.needkey:\r\n                        var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                        eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, 'cenc')});\r\n                        break;\r\n\r\n                    case api.keyerror:\r\n                        sessionToken = findSessionByID(sessions, event.sessionId);\r\n                        if (!sessionToken) {\r\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            var msg = '';\r\n                            switch (event.errorCode.code) {\r\n                                case 1:\r\n                                    msg += 'MEDIA_KEYERR_UNKNOWN - An unspecified error occurred. This value is used for errors that don\\'t match any of the other codes.';\r\n                                    break;\r\n                                case 2:\r\n                                    msg += 'MEDIA_KEYERR_CLIENT - The Key System could not be installed or updated.';\r\n                                    break;\r\n                                case 3:\r\n                                    msg += 'MEDIA_KEYERR_SERVICE - The message passed into update indicated an error from the license service.';\r\n                                    break;\r\n                                case 4:\r\n                                    msg += 'MEDIA_KEYERR_OUTPUT - There is no available output device with the required characteristics for the content protection system.';\r\n                                    break;\r\n                                case 5:\r\n                                    msg += 'MEDIA_KEYERR_HARDWARECHANGE - A hardware configuration change caused a content protection error.';\r\n                                    break;\r\n                                case 6:\r\n                                    msg += 'MEDIA_KEYERR_DOMAIN - An error occurred in a multi-device domain licensing configuration. The most common error is a failure to join the domain.';\r\n                                    break;\r\n                            }\r\n                            msg += '  System Code = ' + event.systemCode;\r\n                            // TODO: Build error string based on key error\r\n                            eventBus.trigger(Events.KEY_ERROR, {data: new KeyError(sessionToken, msg)});\r\n                        } else {\r\n                            log('No session token found for key error');\r\n                        }\r\n                        break;\r\n\r\n                    case api.keyadded:\r\n                        sessionToken = findSessionByID(sessions, event.sessionId);\r\n                        if (!sessionToken) {\r\n                            sessionToken = findSessionByID(pendingSessions, event.sessionId);\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            log('DRM: Key added.');\r\n                            eventBus.trigger(Events.KEY_ADDED, {data: sessionToken});//TODO not sure anything is using sessionToken? why there?\r\n                        } else {\r\n                            log('No session token found for key added');\r\n                        }\r\n                        break;\r\n\r\n                    case api.keymessage:\r\n\r\n                        // If this CDM does not support session IDs, we will be limited\r\n                        // to a single session\r\n                        moreSessionsAllowed = (event.sessionId !== null) && (event.sessionId !== undefined);\r\n\r\n                        // SessionIDs supported\r\n                        if (moreSessionsAllowed) {\r\n\r\n                            // Attempt to find an uninitialized token with this sessionID\r\n                            sessionToken = findSessionByID(sessions, event.sessionId);\r\n                            if (!sessionToken && pendingSessions.length > 0) {\r\n\r\n                                // This is the first message for our latest session, so set the\r\n                                // sessionID and add it to our list\r\n                                sessionToken = pendingSessions.shift();\r\n                                sessions.push(sessionToken);\r\n                                sessionToken.sessionID = event.sessionId;\r\n                            }\r\n                        } else if (pendingSessions.length > 0) { // SessionIDs not supported\r\n\r\n                            sessionToken = pendingSessions.shift();\r\n                            sessions.push(sessionToken);\r\n\r\n                            if (pendingSessions.length !== 0) {\r\n                                errHandler.mediaKeyMessageError('Multiple key sessions were creates with a user-agent that does not support sessionIDs!! Unpredictable behavior ahead!');\r\n                            }\r\n                        }\r\n\r\n                        if (sessionToken) {\r\n                            var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n\r\n                            // For ClearKey, the spec mandates that you pass this message to the\r\n                            // addKey method, so we always save it to the token since there is no\r\n                            // way to tell which key system is in use\r\n                            sessionToken.keyMessage = message;\r\n                            eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, {data: new KeyMessage(sessionToken, message, event.defaultURL)});\r\n\r\n                        } else {\r\n                            log('No session token found for key message');\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    /**\r\n     * Helper function to retrieve the stored session token based on a given\r\n     * sessionID value\r\n     *\r\n     * @param {Array} sessionArray - the array of sessions to search\r\n     * @param {*} sessionID - the sessionID to search for\r\n     * @returns {*} the session token with the given sessionID\r\n     */\r\n    function findSessionByID(sessionArray, sessionID) {\r\n\r\n        if (!sessionID || !sessionArray) {\r\n            return null;\r\n        } else {\r\n            var len = sessionArray.length;\r\n            for (var i = 0; i < len; i++) {\r\n                if (sessionArray[i].sessionID == sessionID) {\r\n                    return sessionArray[i];\r\n                }\r\n            }\r\n            return null;\r\n        }\r\n    }\r\n\r\n    function removeEventListeners() {\r\n        videoElement.removeEventListener(api.keyerror, eventHandler);\r\n        videoElement.removeEventListener(api.needkey, eventHandler);\r\n        videoElement.removeEventListener(api.keymessage, eventHandler);\r\n        videoElement.removeEventListener(api.keyadded, eventHandler);\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData: getAllInitData,\r\n        requestKeySystemAccess: requestKeySystemAccess,\r\n        getKeySystem: getKeySystem,\r\n        selectKeySystem: selectKeySystem,\r\n        setMediaElement: setMediaElement,\r\n        createKeySession: createKeySession,\r\n        updateKeySession: updateKeySession,\r\n        closeKeySession: closeKeySession,\r\n        setServerCertificate: setServerCertificate,\r\n        loadKeySession: loadKeySession,\r\n        removeKeySession: removeKeySession,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_01b.__dashjs_factory_name = 'ProtectionModel_01b';\r\nexport default FactoryMaker.getClassFactory(ProtectionModel_01b);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Most recent EME implementation\r\n *\r\n * Implemented by Google Chrome v36+ (Windows, OSX, Linux)\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\r\nimport NeedKey from '../vo/NeedKey';\r\nimport KeyError from '../vo/KeyError';\r\nimport KeyMessage from '../vo/KeyMessage';\r\nimport KeySystemAccess from '../vo/KeySystemAccess';\r\nimport Events from '../../../core/events/Events';\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\n\r\nfunction ProtectionModel_21Jan2015(config) {\r\n\r\n    let context = this.context;\r\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    let log = config.log;\r\n\r\n    var instance,\r\n        keySystem,\r\n        videoElement,\r\n        mediaKeys,\r\n        sessions,\r\n        eventHandler,\r\n        protectionKeyController;\r\n\r\n    function setup() {\r\n        keySystem = null;\r\n        videoElement = null;\r\n        mediaKeys = null;\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        var numSessions = sessions.length;\r\n        var session;\r\n\r\n        if (numSessions !== 0) {\r\n            // Called when we are done closing a session.  Success or fail\r\n            var done = function (session) {\r\n                removeSession(session);\r\n                if (sessions.length === 0) {\r\n                    if (videoElement) {\r\n                        videoElement.removeEventListener('encrypted', eventHandler);\r\n                        videoElement.setMediaKeys(null).then(function () {\r\n                            eventBus.trigger(Events.TEARDOWN_COMPLETE);\r\n                        });\r\n                    } else {\r\n                        eventBus.trigger(Events.TEARDOWN_COMPLETE);\r\n                    }\r\n                }\r\n            };\r\n            for (var i = 0; i < numSessions; i++) {\r\n                session = sessions[i];\r\n                (function (s) {\r\n                    // Override closed promise resolver\r\n                    session.session.closed.then(function () {\r\n                        done(s);\r\n                    });\r\n                    // Close the session and handle errors, otherwise promise\r\n                    // resolver above will be called\r\n                    closeKeySessionInternal(session).catch(function () {\r\n                        done(s);\r\n                    });\r\n\r\n                })(session);\r\n            }\r\n        } else {\r\n            eventBus.trigger(Events.TEARDOWN_COMPLETE);\r\n        }\r\n    }\r\n\r\n    function getKeySystem() {\r\n        return keySystem;\r\n    }\r\n\r\n    function getAllInitData() {\r\n        var retVal = [];\r\n        for (var i = 0; i < sessions.length; i++) {\r\n            retVal.push(sessions[i].initData);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n        requestKeySystemAccessInternal(ksConfigurations, 0);\r\n    }\r\n\r\n    function selectKeySystem(keySystemAccess) {\r\n        keySystemAccess.mksa.createMediaKeys().then(function (mkeys) {\r\n            keySystem = keySystemAccess.keySystem;\r\n            mediaKeys = mkeys;\r\n            if (videoElement) {\r\n                videoElement.setMediaKeys(mediaKeys);\r\n            }\r\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\r\n\r\n        }).catch(function () {\r\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED, {error: 'Error selecting keys system (' + keySystemAccess.keySystem.systemString + ')! Could not create MediaKeys -- TODO'});\r\n        });\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement)\r\n            return;\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            videoElement.removeEventListener('encrypted', eventHandler);\r\n            videoElement.setMediaKeys(null);\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener('encrypted', eventHandler);\r\n            if (mediaKeys) {\r\n                videoElement.setMediaKeys(mediaKeys);\r\n            }\r\n        }\r\n    }\r\n\r\n    function setServerCertificate(serverCertificate) {\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not set server certificate until you have selected a key system');\r\n        }\r\n        mediaKeys.setServerCertificate(serverCertificate).then(function () {\r\n            log('DRM: License server certificate successfully updated.');\r\n            eventBus.trigger(Events.SERVER_CERTIFICATE_UPDATED);\r\n        }).catch(function (error) {\r\n            eventBus.trigger(Events.SERVER_CERTIFICATE_UPDATED, {error: 'Error updating server certificate -- ' + error.name});\r\n        });\r\n    }\r\n\r\n    function createKeySession(initData, sessionType) {\r\n\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        var session = mediaKeys.createSession(sessionType);\r\n        var sessionToken = createSessionToken(session, initData, sessionType);\r\n\r\n        // Generate initial key request\r\n        session.generateRequest('cenc', initData).then(function () {\r\n            log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\r\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\r\n        }).catch(function (error) {\r\n            // TODO: Better error string\r\n            removeSession(sessionToken);\r\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Error generating key request -- ' + error.name});\r\n        });\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n\r\n        var session = sessionToken.session;\r\n\r\n        // Send our request to the key session\r\n        if (protectionKeyController.isClearKey(keySystem)) {\r\n            message = message.toJWK();\r\n        }\r\n        session.update(message).catch(function (error) {\r\n            eventBus.trigger(Events.KEY_ERROR, {data: new KeyError(sessionToken, 'Error sending update() message! ' + error.name)});\r\n        });\r\n    }\r\n\r\n    function loadKeySession(sessionID) {\r\n        if (!keySystem || !mediaKeys) {\r\n            throw new Error('Can not load sessions until you have selected a key system');\r\n        }\r\n\r\n        var session = mediaKeys.createSession();\r\n\r\n        // Load persisted session data into our newly created session object\r\n        session.load(sessionID).then(function (success) {\r\n            if (success) {\r\n                var sessionToken = createSessionToken(session);\r\n                log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\r\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\r\n            } else {\r\n                eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Could not load session! Invalid Session ID (' + sessionID + ')'});\r\n            }\r\n        }).catch(function (error) {\r\n            eventBus.trigger(Events.KEY_SESSION_CREATED, {data: null, error: 'Could not load session (' + sessionID + ')! ' + error.name});\r\n        });\r\n    }\r\n\r\n    function removeKeySession(sessionToken) {\r\n        var session = sessionToken.session;\r\n\r\n        session.remove().then(function () {\r\n            log('DRM: Session removed.  SessionID = ' + sessionToken.getSessionID());\r\n            eventBus.trigger(Events.KEY_SESSION_REMOVED, {data: sessionToken.getSessionID()});\r\n        }, function (error) {\r\n            eventBus.trigger(Events.KEY_SESSION_REMOVED, {data: null, error: 'Error removing session (' + sessionToken.getSessionID() + '). ' + error.name});\r\n\r\n        });\r\n    }\r\n\r\n    function closeKeySession(sessionToken) {\r\n        // Send our request to the key session\r\n        closeKeySessionInternal(sessionToken).catch(function (error) {\r\n            removeSession(sessionToken);\r\n            eventBus.trigger(Events.KEY_SESSION_CLOSED, {data: null, error: 'Error closing session (' + sessionToken.getSessionID() + ') ' + error.name});\r\n        });\r\n    }\r\n\r\n    function requestKeySystemAccessInternal(ksConfigurations, idx) {\r\n        (function (i) {\r\n            var keySystem = ksConfigurations[i].ks;\r\n            var configs = ksConfigurations[i].configs;\r\n            navigator.requestMediaKeySystemAccess(keySystem.systemString, configs).then(function (mediaKeySystemAccess) {\r\n\r\n                // Chrome 40 does not currently implement MediaKeySystemAccess.getConfiguration()\r\n                var configuration = (typeof mediaKeySystemAccess.getConfiguration === 'function') ?\r\n                        mediaKeySystemAccess.getConfiguration() : null;\r\n                var keySystemAccess = new KeySystemAccess(keySystem, configuration);\r\n                keySystemAccess.mksa = mediaKeySystemAccess;\r\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {data: keySystemAccess});\r\n\r\n            }).catch(function () {\r\n                if (++i < ksConfigurations.length) {\r\n                    requestKeySystemAccessInternal(ksConfigurations, i);\r\n                } else {\r\n                    eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied!'});\r\n                }\r\n            });\r\n        })(idx);\r\n    }\r\n\r\n    function closeKeySessionInternal(sessionToken) {\r\n        var session = sessionToken.session;\r\n\r\n        // Remove event listeners\r\n        session.removeEventListener('keystatuseschange', sessionToken);\r\n        session.removeEventListener('message', sessionToken);\r\n\r\n        // Send our request to the key session\r\n        return session.close();\r\n    }\r\n\r\n    // This is our main event handler for all desired HTMLMediaElement events\r\n    // related to EME.  These events are translated into our API-independent\r\n    // versions of the same events\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n\r\n                    case 'encrypted':\r\n                        if (event.initData) {\r\n                            var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                            eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, event.initDataType)});\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    function removeSession(token) {\r\n        // Remove from our session list\r\n        for (var i = 0; i < sessions.length; i++) {\r\n            if (sessions[i] === token) {\r\n                sessions.splice(i,1);\r\n                break;\r\n            }\r\n        }\r\n    }\r\n\r\n    // Function to create our session token objects which manage the EME\r\n    // MediaKeySession and session-specific event handler\r\n    function createSessionToken(session, initData, sessionType) {\r\n\r\n        var token = { // Implements SessionToken\r\n            session: session,\r\n            initData: initData,\r\n\r\n            // This is our main event handler for all desired MediaKeySession events\r\n            // These events are translated into our API-independent versions of the\r\n            // same events\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n                    case 'keystatuseschange':\r\n                        eventBus.trigger(Events.KEY_STATUSES_CHANGED, {data: this});\r\n                        break;\r\n\r\n                    case 'message':\r\n                        var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n                        eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, {data: new KeyMessage(this, message, undefined, event.messageType)});\r\n                        break;\r\n                }\r\n            },\r\n\r\n            getSessionID: function () {\r\n                return session.sessionId;\r\n            },\r\n\r\n            getExpirationTime: function () {\r\n                return session.expiration;\r\n            },\r\n\r\n            getKeyStatuses: function () {\r\n                return session.keyStatuses;\r\n            },\r\n\r\n            getSessionType: function () {\r\n                return sessionType;\r\n            }\r\n        };\r\n\r\n        // Add all event listeners\r\n        session.addEventListener('keystatuseschange', token);\r\n        session.addEventListener('message', token);\r\n\r\n        // Register callback for session closed Promise\r\n        session.closed.then(function () {\r\n            removeSession(token);\r\n            log('DRM: Session closed.  SessionID = ' + token.getSessionID());\r\n            eventBus.trigger(Events.KEY_SESSION_CLOSED, {data: token.getSessionID()});\r\n        });\r\n\r\n        // Add to our session list\r\n        sessions.push(token);\r\n\r\n        return token;\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData: getAllInitData,\r\n        requestKeySystemAccess: requestKeySystemAccess,\r\n        getKeySystem: getKeySystem,\r\n        selectKeySystem: selectKeySystem,\r\n        setMediaElement: setMediaElement,\r\n        setServerCertificate: setServerCertificate,\r\n        createKeySession: createKeySession,\r\n        updateKeySession: updateKeySession,\r\n        loadKeySession: loadKeySession,\r\n        removeKeySession: removeKeySession,\r\n        closeKeySession: closeKeySession,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_21Jan2015.__dashjs_factory_name = 'ProtectionModel_21Jan2015';\r\nexport default FactoryMaker.getClassFactory(ProtectionModel_21Jan2015);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Implementation of the EME APIs as of the 3 Feb 2014 state of the specification.\r\n *\r\n * Implemented by Internet Explorer 11 (Windows 8.1)\r\n *\r\n * @implements ProtectionModel\r\n * @class\r\n */\r\n\r\nimport ProtectionKeyController from '../controllers/ProtectionKeyController';\r\nimport NeedKey from '../vo/NeedKey';\r\nimport KeyError from '../vo/KeyError';\r\nimport KeyMessage from '../vo/KeyMessage';\r\nimport KeySystemConfiguration from '../vo/KeySystemConfiguration';\r\nimport KeySystemAccess from '../vo/KeySystemAccess';\r\nimport Events from '../../../core/events/Events';\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\n\r\nfunction ProtectionModel_3Feb2014(config) {\r\n\r\n    let context = this.context;\r\n    let eventBus = config.eventBus;//Need to pass in here so we can use same instance since this is optional module\r\n    let log = config.log;\r\n    let api = config.api;\r\n\r\n\r\n    let instance,\r\n        videoElement,\r\n        keySystem,\r\n        mediaKeys,\r\n        keySystemAccess,\r\n        sessions,\r\n        eventHandler,\r\n        protectionKeyController;\r\n\r\n    function setup() {\r\n        videoElement = null;\r\n        keySystem = null;\r\n        mediaKeys = null;\r\n        keySystemAccess = null;\r\n        sessions = [];\r\n        protectionKeyController = ProtectionKeyController(context).getInstance();\r\n        eventHandler = createEventHandler();\r\n    }\r\n\r\n    function reset() {\r\n        try {\r\n            for (var i = 0; i < sessions.length; i++) {\r\n                closeKeySession(sessions[i]);\r\n            }\r\n            if (videoElement) {\r\n                videoElement.removeEventListener(api.needkey, eventHandler);\r\n            }\r\n            eventBus.trigger(Events.TEARDOWN_COMPLETE);\r\n        } catch (error) {\r\n            eventBus.trigger(Events.TEARDOWN_COMPLETE, {error: 'Error tearing down key sessions and MediaKeys! -- ' + error.message});\r\n        }\r\n    }\r\n\r\n    function getKeySystem() {\r\n        return keySystem;\r\n    }\r\n\r\n    function getAllInitData() {\r\n        var retVal = [];\r\n        for (var i = 0; i < sessions.length; i++) {\r\n            retVal.push(sessions[i].initData);\r\n        }\r\n        return retVal;\r\n    }\r\n\r\n    function requestKeySystemAccess(ksConfigurations) {\r\n\r\n        // Try key systems in order, first one with supported key system configuration\r\n        // is used\r\n        var found = false;\r\n        for (var ksIdx = 0; ksIdx < ksConfigurations.length; ksIdx++) {\r\n            var systemString = ksConfigurations[ksIdx].ks.systemString;\r\n            var configs = ksConfigurations[ksIdx].configs;\r\n            var supportedAudio = null;\r\n            var supportedVideo = null;\r\n\r\n            // Try key system configs in order, first one with supported audio/video\r\n            // is used\r\n            for (var configIdx = 0; configIdx < configs.length; configIdx++) {\r\n                var audios = configs[configIdx].audioCapabilities;\r\n                var videos = configs[configIdx].videoCapabilities;\r\n\r\n                // Look for supported audio container/codecs\r\n                if (audios && audios.length !== 0) {\r\n                    supportedAudio = []; // Indicates that we have a requested audio config\r\n                    for (var audioIdx = 0; audioIdx < audios.length; audioIdx++) {\r\n                        if (window[api.MediaKeys].isTypeSupported(systemString, audios[audioIdx].contentType)) {\r\n                            supportedAudio.push(audios[audioIdx]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Look for supported video container/codecs\r\n                if (videos && videos.length !== 0) {\r\n                    supportedVideo = []; // Indicates that we have a requested video config\r\n                    for (var videoIdx = 0; videoIdx < videos.length; videoIdx++) {\r\n                        if (window[api.MediaKeys].isTypeSupported(systemString, videos[videoIdx].contentType)) {\r\n                            supportedVideo.push(videos[videoIdx]);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // No supported audio or video in this configuration OR we have\r\n                // requested audio or video configuration that is not supported\r\n                if ((!supportedAudio && !supportedVideo) ||\r\n                    (supportedAudio && supportedAudio.length === 0) ||\r\n                    (supportedVideo && supportedVideo.length === 0)) {\r\n                    continue;\r\n                }\r\n\r\n                // This configuration is supported\r\n                found = true;\r\n                var ksConfig = new KeySystemConfiguration(supportedAudio, supportedVideo);\r\n                var ks = protectionKeyController.getKeySystemBySystemString(systemString);\r\n                eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {data: new KeySystemAccess(ks, ksConfig)});\r\n                break;\r\n            }\r\n        }\r\n        if (!found) {\r\n            eventBus.trigger(Events.KEY_SYSTEM_ACCESS_COMPLETE, {error: 'Key system access denied! -- No valid audio/video content configurations detected!'});\r\n        }\r\n    }\r\n\r\n    function selectKeySystem(ksAccess) {\r\n        try {\r\n            mediaKeys = ksAccess.mediaKeys = new window[api.MediaKeys](ksAccess.keySystem.systemString);\r\n            keySystem = ksAccess.keySystem;\r\n            keySystemAccess = ksAccess;\r\n            if (videoElement) {\r\n                setMediaKeys();\r\n            }\r\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED);\r\n        } catch (error) {\r\n            eventBus.trigger(Events.INTERNAL_KEY_SYSTEM_SELECTED, {error: 'Error selecting keys system (' + keySystem.systemString + ')! Could not create MediaKeys -- TODO'});\r\n        }\r\n    }\r\n\r\n    function setMediaElement(mediaElement) {\r\n        if (videoElement === mediaElement)\r\n            return;\r\n\r\n        // Replacing the previous element\r\n        if (videoElement) {\r\n            videoElement.removeEventListener(api.needkey, eventHandler);\r\n        }\r\n\r\n        videoElement = mediaElement;\r\n\r\n        // Only if we are not detaching from the existing element\r\n        if (videoElement) {\r\n            videoElement.addEventListener(api.needkey, eventHandler);\r\n            if (mediaKeys) {\r\n                setMediaKeys();\r\n            }\r\n        }\r\n    }\r\n\r\n    function createKeySession(initData /*, keySystemType */) {\r\n\r\n        if (!keySystem || !mediaKeys || !keySystemAccess) {\r\n            throw new Error('Can not create sessions until you have selected a key system');\r\n        }\r\n\r\n        // Use the first video capability for the contentType.\r\n        // TODO:  Not sure if there is a way to concatenate all capability data into a RFC6386-compatible format\r\n\r\n        // If player is trying to playback Audio only stream - don't error out.\r\n        var capabilities = null;\r\n\r\n        if (keySystemAccess.ksConfiguration.videoCapabilities !== null && keySystemAccess.ksConfiguration.videoCapabilities.length > 0)\r\n          capabilities = keySystemAccess.ksConfiguration.videoCapabilities[0];\r\n\r\n        if (capabilities === null && keySystemAccess.ksConfiguration.audioCapabilities !== null && keySystemAccess.ksConfiguration.audioCapabilities.length > 0)\r\n          capabilities = keySystemAccess.ksConfiguration.audioCapabilities[0];\r\n\r\n        if (capabilities === null)\r\n          throw new Error('Can not create sessions for unknown content types.');\r\n\r\n        var contentType = capabilities.contentType;\r\n        var session = mediaKeys.createSession(contentType, new Uint8Array(initData));\r\n        var sessionToken = createSessionToken(session, initData);\r\n\r\n        // Add all event listeners\r\n        session.addEventListener(api.error, sessionToken);\r\n        session.addEventListener(api.message, sessionToken);\r\n        session.addEventListener(api.ready, sessionToken);\r\n        session.addEventListener(api.close, sessionToken);\r\n\r\n        // Add to our session list\r\n        sessions.push(sessionToken);\r\n        log('DRM: Session created.  SessionID = ' + sessionToken.getSessionID());\r\n        eventBus.trigger(Events.KEY_SESSION_CREATED, {data: sessionToken});\r\n    }\r\n\r\n    function updateKeySession(sessionToken, message) {\r\n\r\n        var session = sessionToken.session;\r\n\r\n        if (!protectionKeyController.isClearKey(keySystem)) {\r\n            // Send our request to the key session\r\n            session.update(new Uint8Array(message));\r\n        } else {\r\n            // For clearkey, message is a ClearKeyKeySet\r\n            session.update(new Uint8Array(message.toJWK()));\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Close the given session and release all associated keys.  Following\r\n     * this call, the sessionToken becomes invalid\r\n     *\r\n     * @param {Object} sessionToken - the session token\r\n     */\r\n    function closeKeySession(sessionToken) {\r\n\r\n        var session = sessionToken.session;\r\n\r\n        // Remove event listeners\r\n        session.removeEventListener(api.error, sessionToken);\r\n        session.removeEventListener(api.message, sessionToken);\r\n        session.removeEventListener(api.ready, sessionToken);\r\n        session.removeEventListener(api.close, sessionToken);\r\n\r\n        // Remove from our session list\r\n        for (var i = 0; i < sessions.length; i++) {\r\n            if (sessions[i] === sessionToken) {\r\n                sessions.splice(i,1);\r\n                break;\r\n            }\r\n        }\r\n\r\n        // Send our request to the key session\r\n        session[api.release]();\r\n    }\r\n\r\n    function setServerCertificate(/*serverCertificate*/) { /* Not supported */ }\r\n    function loadKeySession(/*sessionID*/) { /* Not supported */ }\r\n    function removeKeySession(/*sessionToken*/) { /* Not supported */ }\r\n\r\n\r\n    function createEventHandler() {\r\n        return {\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n\r\n                    case api.needkey:\r\n                        if (event.initData) {\r\n                            var initData = ArrayBuffer.isView(event.initData) ? event.initData.buffer : event.initData;\r\n                            eventBus.trigger(Events.NEED_KEY, {key: new NeedKey(initData, 'cenc')});\r\n                        }\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n\r\n    // IE11 does not let you set MediaKeys until it has entered a certain\r\n    // readyState, so we need this logic to ensure we don't set the keys\r\n    // too early\r\n    function setMediaKeys() {\r\n        var boundDoSetKeys = null;\r\n        var doSetKeys = function () {\r\n            videoElement.removeEventListener('loadedmetadata', boundDoSetKeys);\r\n            videoElement[api.setMediaKeys](mediaKeys);\r\n            eventBus.trigger(Events.VIDEO_ELEMENT_SELECTED);\r\n        };\r\n        if (videoElement.readyState >= 1) {\r\n            doSetKeys();\r\n        } else {\r\n            boundDoSetKeys = doSetKeys.bind(this);\r\n            videoElement.addEventListener('loadedmetadata', boundDoSetKeys);\r\n        }\r\n\r\n    }\r\n\r\n    // Function to create our session token objects which manage the EME\r\n    // MediaKeySession and session-specific event handler\r\n    function createSessionToken(keySession, initData) {\r\n        return {\r\n            // Implements SessionToken\r\n            session: keySession,\r\n            initData: initData,\r\n\r\n            getSessionID: function () {\r\n                return this.session.sessionId;\r\n            },\r\n\r\n            getExpirationTime: function () {\r\n                return NaN;\r\n            },\r\n\r\n            getSessionType: function () {\r\n                return 'temporary';\r\n            },\r\n            // This is our main event handler for all desired MediaKeySession events\r\n            // These events are translated into our API-independent versions of the\r\n            // same events\r\n            handleEvent: function (event) {\r\n                switch (event.type) {\r\n\r\n                    case api.error:\r\n                        var errorStr = 'KeyError'; // TODO: Make better string from event\r\n                        eventBus.trigger(Events.KEY_ERROR, { data: new KeyError(this, errorStr) });\r\n                        break;\r\n                    case api.message:\r\n                        var message = ArrayBuffer.isView(event.message) ? event.message.buffer : event.message;\r\n                        eventBus.trigger(Events.INTERNAL_KEY_MESSAGE, { data: new KeyMessage(this, message, event.destinationURL) });\r\n                        break;\r\n                    case api.ready:\r\n                        log('DRM: Key added.');\r\n                        eventBus.trigger(Events.KEY_ADDED);\r\n                        break;\r\n\r\n                    case api.close:\r\n                        log('DRM: Session closed.  SessionID = ' + this.getSessionID());\r\n                        eventBus.trigger(Events.KEY_SESSION_CLOSED, { data: this.getSessionID() });\r\n                        break;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    instance = {\r\n        getAllInitData: getAllInitData,\r\n        requestKeySystemAccess: requestKeySystemAccess,\r\n        getKeySystem: getKeySystem,\r\n        selectKeySystem: selectKeySystem,\r\n        setMediaElement: setMediaElement,\r\n        createKeySession: createKeySession,\r\n        updateKeySession: updateKeySession,\r\n        closeKeySession: closeKeySession,\r\n        setServerCertificate: setServerCertificate,\r\n        loadKeySession: loadKeySession,\r\n        removeKeySession: removeKeySession,\r\n        reset: reset\r\n    };\r\n\r\n    setup();\r\n\r\n    return instance;\r\n}\r\n\r\nProtectionModel_3Feb2014.__dashjs_factory_name = 'ProtectionModel_3Feb2014';\r\nexport default FactoryMaker.getClassFactory(ProtectionModel_3Feb2014);\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * CableLabs ClearKey license server implementation\r\n *\r\n * For testing purposes and evaluating potential uses for ClearKey, we have developed\r\n * a dirt-simple API for requesting ClearKey licenses from a remote server.\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n */\r\nimport KeyPair from '../vo/KeyPair';\r\nimport ClearKeyKeySet from '../vo/ClearKeyKeySet';\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\n\r\nfunction ClearKey() {\r\n\r\n    let instance;\r\n\r\n    function getServerURLFromMessage(url, message/*, messageType*/) {\r\n        // Build ClearKey server query string\r\n        var jsonMsg = JSON.parse(String.fromCharCode.apply(null, new Uint8Array(message)));\r\n        url += '/?';\r\n        for (var i = 0; i < jsonMsg.kids.length; i++) {\r\n            url += jsonMsg.kids[i] + '&';\r\n        }\r\n        url = url.substring(0, url.length - 1);\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'GET';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr*/) {\r\n        return 'json';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        if (!serverResponse.hasOwnProperty('keys')) {\r\n            return null;\r\n        }\r\n        var keyPairs = [];\r\n        for (let i = 0; i < serverResponse.keys.length; i++) {\r\n            var keypair = serverResponse.keys[i];\r\n            var keyid = keypair.kid.replace(/=/g, '');\r\n            var key = keypair.k.replace(/=/g, '');\r\n\r\n            keyPairs.push(new KeyPair(keyid, key));\r\n        }\r\n        return new ClearKeyKeySet(keyPairs);\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage: getServerURLFromMessage,\r\n        getHTTPMethod: getHTTPMethod,\r\n        getResponseType: getResponseType,\r\n        getLicenseMessage: getLicenseMessage,\r\n        getErrorResponse: getErrorResponse,\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nClearKey.__dashjs_factory_name = 'ClearKey';\r\nexport default FactoryMaker.getSingletonFactory(ClearKey);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * CastLabs DRMToday License Server implementation\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n */\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\nimport BASE64 from '../../../../externals/base64';\r\n\r\nfunction DRMToday() {\r\n\r\n    const keySystems = {\r\n        'com.widevine.alpha': {\r\n            responseType: 'json',\r\n            getLicenseMessage: function (response) {\r\n                return BASE64.decodeArray(response.license);\r\n            },\r\n            getErrorResponse: function (response) {\r\n                return response;\r\n            }\r\n        },\r\n        'com.microsoft.playready': {\r\n            responseType: 'arraybuffer',\r\n            getLicenseMessage: function (response) {\r\n                return response;\r\n            },\r\n            getErrorResponse: function (response) {\r\n                return String.fromCharCode.apply(null, new Uint8Array(response));\r\n            }\r\n        }\r\n    };\r\n\r\n    let instance;\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(keySystemStr/*, messageType*/) {\r\n        return keySystems[keySystemStr].responseType;\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse, keySystemStr/*, messageType*/) {\r\n        return keySystems[keySystemStr].getLicenseMessage(serverResponse);\r\n    }\r\n\r\n    function getErrorResponse(serverResponse, keySystemStr/*, messageType*/) {\r\n        return keySystems[keySystemStr].getErrorResponse(serverResponse);\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage: getServerURLFromMessage,\r\n        getHTTPMethod: getHTTPMethod,\r\n        getResponseType: getResponseType,\r\n        getLicenseMessage: getLicenseMessage,\r\n        getErrorResponse: getErrorResponse,\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nDRMToday.__dashjs_factory_name = 'DRMToday';\r\nexport default FactoryMaker.getSingletonFactory(DRMToday);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * Microsoft PlayReady Test License Server\r\n *\r\n * For testing content that uses the PlayReady test server at\r\n *\r\n * @implements LicenseServer\r\n * @class\r\n */\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\n\r\nfunction PlayReady() {\r\n\r\n    let instance;\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr, messageType*/) {\r\n        return 'arraybuffer';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        return serverResponse;\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage: getServerURLFromMessage,\r\n        getHTTPMethod: getHTTPMethod,\r\n        getResponseType: getResponseType,\r\n        getLicenseMessage: getLicenseMessage,\r\n        getErrorResponse: getErrorResponse,\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nPlayReady.__dashjs_factory_name = 'PlayReady';\r\nexport default FactoryMaker.getSingletonFactory(PlayReady);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport FactoryMaker from '../../../core/FactoryMaker';\r\n\r\nfunction Widevine() {\r\n\r\n    let instance;\r\n\r\n    function getServerURLFromMessage(url /*, message, messageType*/) {\r\n        return url;\r\n    }\r\n\r\n    function getHTTPMethod(/*messageType*/) {\r\n        return 'POST';\r\n    }\r\n\r\n    function getResponseType(/*keySystemStr, messageType*/) {\r\n        return 'arraybuffer';\r\n    }\r\n\r\n    function getLicenseMessage(serverResponse/*, keySystemStr, messageType*/) {\r\n        return serverResponse;\r\n    }\r\n\r\n    function getErrorResponse(serverResponse/*, keySystemStr, messageType*/) {\r\n        return String.fromCharCode.apply(null, new Uint8Array(serverResponse));\r\n    }\r\n\r\n    instance = {\r\n        getServerURLFromMessage: getServerURLFromMessage,\r\n        getHTTPMethod: getHTTPMethod,\r\n        getResponseType: getResponseType,\r\n        getLicenseMessage: getLicenseMessage,\r\n        getErrorResponse: getErrorResponse,\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nWidevine.__dashjs_factory_name = 'Widevine';\r\nexport default FactoryMaker.getSingletonFactory(Widevine);","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @classdesc A collection of ClearKey encryption keys with an (optional) associated\r\n *  type\r\n * @ignore\r\n */\r\nclass ClearKeyKeySet {\r\n    /**\r\n     * @param {Array.<KeyPair>} keyPairs\r\n     * @param {string} type the type of keys in this set.  One of either 'persistent'\r\n     * or 'temporary'.  Can also be null or undefined.\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(keyPairs, type) {\r\n        if (type && type !== 'persistent' && type !== 'temporary')\r\n            throw new Error('Invalid ClearKey key set type!  Must be one of \\'persistent\\' or \\'temporary\\'');\r\n        this.keyPairs = keyPairs;\r\n        this.type = type;\r\n    }\r\n\r\n    /**\r\n     * Convert this key set to its JSON Web Key (JWK) representation\r\n     *\r\n     * @return {ArrayBuffer} JWK object UTF-8 encoded as ArrayBuffer\r\n     */\r\n    toJWK() {\r\n        var i;\r\n        var numKeys = this.keyPairs.length;\r\n        var jwk = {keys: []};\r\n\r\n        for (i = 0; i < numKeys; i++) {\r\n            var key = {\r\n                kty: 'oct',\r\n                alg: 'A128KW',\r\n                kid: this.keyPairs[i].keyID,\r\n                k: this.keyPairs[i].key\r\n            };\r\n            jwk.keys.push(key);\r\n        }\r\n        if (this.type) {\r\n            jwk.type = this.type;\r\n        }\r\n        var jwkString = JSON.stringify(jwk);\r\n        var len = jwkString.length;\r\n\r\n        // Convert JSON string to ArrayBuffer\r\n        var buf = new ArrayBuffer(len);\r\n        var bView = new Uint8Array(buf);\r\n        for (i = 0; i < len; i++)\r\n            bView[i] = jwkString.charCodeAt(i);\r\n        return buf;\r\n    }\r\n}\r\n\r\nexport default ClearKeyKeySet;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @classdesc EME-independent KeyError\r\n * @ignore\r\n */\r\nclass KeyError {\r\n    /**\r\n     * @param {Object} sessionToken the key session to which this error is associated\r\n     * @param {string} errorString an informational error message\r\n     * @class\r\n     * @deprecated Newest versions of EME APIs will not use this error object\r\n     */\r\n    constructor(sessionToken, errorString) {\r\n        this.sessionToken = sessionToken;\r\n        this.error = errorString;\r\n    }\r\n}\r\n\r\nexport default KeyError;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc EME-independent KeyMessage\r\n * @ignore\r\n */\r\nclass KeyMessage {\r\n    /**\r\n     * @param {SessionToken} sessionToken the session\r\n     * to which the key message is associated\r\n     * @param {ArrayBuffer} message the key message\r\n     * @param {string} defaultURL license acquisition URL provided by the CDM\r\n     * @param {string} messageType Supported message types can be found\r\n     * {@link https://w3c.github.io/encrypted-media/#idl-def-MediaKeyMessageType|here}.\r\n     * @class\r\n     */\r\n    constructor(sessionToken, message, defaultURL, messageType) {\r\n        this.sessionToken = sessionToken;\r\n        this.message = message;\r\n        this.defaultURL = defaultURL;\r\n        this.messageType = messageType ? messageType : 'license-request';\r\n    }\r\n}\r\n\r\nexport default KeyMessage;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Represents a 128-bit keyID and 128-bit encryption key\r\n * @ignore\r\n */\r\nclass KeyPair {\r\n    /**\r\n     * @param {string} keyID 128-bit key ID, base64 encoded, with no padding\r\n     * @param {string} key 128-bit encryption key, base64 encoded, with no padding\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(keyID, key) {\r\n        this.keyID = keyID;\r\n        this.key = key;\r\n    }\r\n}\r\n\r\nexport default KeyPair;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc Creates a new key system access token.  Represents a valid key system for\r\n * given piece of content and key system requirements.  Used to initialize license\r\n * acquisition operations.\r\n * @ignore\r\n */\r\nclass KeySystemAccess {\r\n    /**\r\n     * @param {MediaPlayer.dependencies.protection.KeySystem} keySystem the key system\r\n     * @param {KeySystemConfiguration} ksConfiguration the\r\n     * subset of configurations passed to the key system access request that are supported\r\n     * by this user agent\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(keySystem, ksConfiguration) {\r\n        this.keySystem = keySystem;\r\n        this.ksConfiguration = ksConfiguration;\r\n    }\r\n}\r\n\r\nexport default KeySystemAccess;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n\r\n/**\r\n * @classdesc Represents a set of configurations that describe the capabilities desired for\r\n *  support by a given CDM\r\n * @ignore\r\n */\r\nclass KeySystemConfiguration {\r\n    /**\r\n     * @param {Array.<MediaCapability>} audioCapabilities array of\r\n     * desired audio capabilities.  Higher preference capabilities should be placed earlier\r\n     * in the array.\r\n     * @param {Array.<MediaCapability>} videoCapabilities array of\r\n     * desired video capabilities.  Higher preference capabilities should be placed earlier\r\n     * in the array.\r\n     * @param {string} distinctiveIdentifier desired use of distinctive identifiers.\r\n     * One of \"required\", \"optional\", or \"not-allowed\"\r\n     * @param {string} persistentState desired support for persistent storage of\r\n     * key systems.  One of \"required\", \"optional\", or \"not-allowed\"\r\n     * @param {Array.<string>} sessionTypes List of session types that must\r\n     * be supported by the key system\r\n     * @class\r\n     */\r\n    constructor(audioCapabilities, videoCapabilities, distinctiveIdentifier, persistentState, sessionTypes) {\r\n        this.initDataTypes = [ 'cenc' ];\r\n        if (audioCapabilities && audioCapabilities.length) {\r\n            this.audioCapabilities = audioCapabilities;\r\n        }\r\n        if (videoCapabilities && videoCapabilities.length) {\r\n            this.videoCapabilities = videoCapabilities;\r\n        }\r\n        this.distinctiveIdentifier = distinctiveIdentifier;\r\n        this.persistentState = persistentState;\r\n        this.sessionTypes = sessionTypes;\r\n    }\r\n}\r\n\r\nexport default KeySystemConfiguration;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc A media capability\r\n * @ignore\r\n */\r\nclass MediaCapability {\r\n    /**\r\n     * @param {string} contentType MIME type and codecs (RFC6386)\r\n     * @param {string} robustness\r\n     * @class\r\n     * @ignore\r\n     */\r\n    constructor(contentType, robustness) {\r\n        this.contentType = contentType;\r\n        this.robustness = robustness;\r\n    }\r\n}\r\n\r\nexport default MediaCapability;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @classdesc NeedKey\r\n * @ignore\r\n */\r\nclass NeedKey {\r\n    /**\r\n     * @param {ArrayBuffer} initData the initialization data\r\n     * @param {string} initDataType initialization data type\r\n     * @class\r\n     */\r\n    constructor(initData, initDataType) {\r\n        this.initData = initData;\r\n        this.initDataType = initDataType;\r\n    }\r\n}\r\n\r\nexport default NeedKey;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\nimport EventBus from '../../core/EventBus';\r\nimport Events from '../../core/events/Events';\r\nimport FactoryMaker from '../../core/FactoryMaker';\r\n\r\nconst CAPABILITY_ERROR_MEDIASOURCE      = 'mediasource';\r\nconst CAPABILITY_ERROR_MEDIAKEYS        = 'mediakeys';\r\n\r\nconst DOWNLOAD_ERROR_ID_MANIFEST        = 'manifest';\r\nconst DOWNLOAD_ERROR_ID_SIDX            = 'SIDX';\r\nconst DOWNLOAD_ERROR_ID_CONTENT         = 'content';\r\nconst DOWNLOAD_ERROR_ID_INITIALIZATION  = 'initialization';\r\nconst DOWNLOAD_ERROR_ID_XLINK           = 'xlink';\r\n\r\nconst MANIFEST_ERROR_ID_CODEC           = 'codec';\r\nconst MANIFEST_ERROR_ID_PARSE           = 'parse';\r\nconst MANIFEST_ERROR_ID_NOSTREAMS       = 'nostreams';\r\n\r\nconst TIMED_TEXT_ERROR_ID_PARSE         = 'parse';\r\n\r\nfunction ErrorHandler() {\r\n\r\n    let instance;\r\n    let context = this.context;\r\n    let eventBus = EventBus(context).getInstance();\r\n\r\n    // \"mediasource\"|\"mediakeys\"\r\n    function capabilityError(err) {\r\n        eventBus.trigger(Events.ERROR, {error: 'capability', event: err});\r\n    }\r\n\r\n    // {id: \"manifest\"|\"SIDX\"|\"content\"|\"initialization\"|\"xlink\", url: \"\", request: {XMLHttpRequest instance}}\r\n    function downloadError(id, url, request) {\r\n        eventBus.trigger(Events.ERROR, {error: 'download', event: {id: id, url: url, request: request}});\r\n    }\r\n\r\n    // {message: \"\", id: \"codec\"|\"parse\"|\"nostreams\", manifest: {parsed manifest}}\r\n    function manifestError(message, id, manifest, err) {\r\n        eventBus.trigger(Events.ERROR, {error: 'manifestError', event: {message: message, id: id, manifest: manifest, event: err}});\r\n    }\r\n\r\n    // {message: '', id: 'parse', cc: ''}\r\n    function timedTextError(message, id, ccContent) {\r\n        eventBus.trigger(Events.ERROR, {error: 'cc', event: {message: message, id: id, cc: ccContent}});\r\n    }\r\n\r\n    function mediaSourceError(err) {\r\n        eventBus.trigger(Events.ERROR, {error: 'mediasource', event: err});\r\n    }\r\n\r\n    function mediaKeySessionError(err) {\r\n        eventBus.trigger(Events.ERROR, {error: 'key_session', event: err});\r\n    }\r\n\r\n    function mediaKeyMessageError(err) {\r\n        eventBus.trigger(Events.ERROR, {error: 'key_message', event: err});\r\n    }\r\n\r\n    instance = {\r\n        capabilityError: capabilityError,\r\n        downloadError: downloadError,\r\n        manifestError: manifestError,\r\n        timedTextError: timedTextError,\r\n        mediaSourceError: mediaSourceError,\r\n        mediaKeySessionError: mediaKeySessionError,\r\n        mediaKeyMessageError: mediaKeyMessageError\r\n    };\r\n\r\n    return instance;\r\n}\r\n\r\nErrorHandler.__dashjs_factory_name = 'ErrorHandler';\r\n\r\nconst factory = FactoryMaker.getSingletonFactory(ErrorHandler);\r\n\r\nfactory.CAPABILITY_ERROR_MEDIASOURCE        = CAPABILITY_ERROR_MEDIASOURCE;\r\nfactory.CAPABILITY_ERROR_MEDIAKEYS          = CAPABILITY_ERROR_MEDIAKEYS;\r\nfactory.DOWNLOAD_ERROR_ID_MANIFEST          = DOWNLOAD_ERROR_ID_MANIFEST;\r\nfactory.DOWNLOAD_ERROR_ID_SIDX              = DOWNLOAD_ERROR_ID_SIDX;\r\nfactory.DOWNLOAD_ERROR_ID_CONTENT           = DOWNLOAD_ERROR_ID_CONTENT;\r\nfactory.DOWNLOAD_ERROR_ID_INITIALIZATION    = DOWNLOAD_ERROR_ID_INITIALIZATION;\r\nfactory.DOWNLOAD_ERROR_ID_XLINK             = DOWNLOAD_ERROR_ID_XLINK;\r\nfactory.MANIFEST_ERROR_ID_CODEC             = MANIFEST_ERROR_ID_CODEC;\r\nfactory.MANIFEST_ERROR_ID_PARSE             = MANIFEST_ERROR_ID_PARSE;\r\nfactory.MANIFEST_ERROR_ID_NOSTREAMS         = MANIFEST_ERROR_ID_NOSTREAMS;\r\nfactory.TIMED_TEXT_ERROR_ID_PARSE           = TIMED_TEXT_ERROR_ID_PARSE;\r\n\r\nexport default factory;\r\n","/**\r\n * The copyright in this software is being made available under the BSD License,\r\n * included below. This software may be subject to other third party and contributor\r\n * rights, including patent rights, and no such rights are granted under this license.\r\n *\r\n * Copyright (c) 2013, Dash Industry Forum.\r\n * All rights reserved.\r\n *\r\n * Redistribution and use in source and binary forms, with or without modification,\r\n * are permitted provided that the following conditions are met:\r\n *  * Redistributions of source code must retain the above copyright notice, this\r\n *  list of conditions and the following disclaimer.\r\n *  * Redistributions in binary form must reproduce the above copyright notice,\r\n *  this list of conditions and the following disclaimer in the documentation and/or\r\n *  other materials provided with the distribution.\r\n *  * Neither the name of Dash Industry Forum nor the names of its\r\n *  contributors may be used to endorse or promote products derived from this software\r\n *  without specific prior written permission.\r\n *\r\n *  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY\r\n *  EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED\r\n *  WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED.\r\n *  IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\r\n *  INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT\r\n *  NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR\r\n *  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY,\r\n *  WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)\r\n *  ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE\r\n *  POSSIBILITY OF SUCH DAMAGE.\r\n */\r\n/**\r\n * @class\r\n * @ignore\r\n */\r\nclass Error {\r\n    constructor(code, message, data) {\r\n        this.code = code || null;\r\n        this.message = message || null;\r\n        this.data = data || null;\r\n    }\r\n}\r\n\r\nexport default Error;"]}